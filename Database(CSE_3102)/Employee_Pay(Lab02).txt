Database Schema for a Employee-Pay scenario-

employee(emp_id : integer, emp_name: string) 
department(dept_id: integer, dept_name: string) 
paydetails(emp_id : integer, dept_id: integer, basic: integer, DOJ: date) 
payroll(emp_id : integer, pay_date: date)

Information: Total salary is a derived attribute which is calculated as follows: 
Total_salary = basic+basic*45% - basic*10%. 

CREATE TABLE employee (
    emp_id INT PRIMARY KEY,
    emp_name VARCHAR(50) NOT NULL
);

CREATE TABLE department (
    dept_id INT PRIMARY KEY,
    dept_name VARCHAR(50) NOT NULL
);

CREATE TABLE paydetails (
    emp_id INT,
    dept_id INT,
    basic INT CHECK (basic > 0),
    DOJ DATE,
    PRIMARY KEY(emp_id, dept_id),
    FOREIGN KEY (emp_id) REFERENCES employee(emp_id),
    FOREIGN KEY (dept_id) REFERENCES department(dept_id)
);

CREATE TABLE payroll (
    emp_id INT,
    pay_date DATE,
    PRIMARY KEY(emp_id, pay_date),
    FOREIGN KEY (emp_id) REFERENCES employee(emp_id)
);

INSERT INTO employee(emp_id, emp_name) VALUES(101, 'Sajid'), (102, 'Sofiq'), (103, 'Forhad'), (104, 'Masum'), (105, 'Riyad'),
    (106, 'Samiul'), (107, 'Reza'), (108, 'Shaheen'), (109, 'Robiul'), (110, 'Sakib');

INSERT INTO department(dept_id, dept_name) VALUES(1, 'Software'), (2, 'Hardware'), (3, 'Hardware'), (4, 'Software'), (5, 'Software'), (6, 'Software'), (7, 'Hardware'), (8, 'Software'), (9, 'Hardware'), (10, 'Hardware');

INSERT INTO paydetails(emp_id, dept_id, basic, DOJ) VALUES(101, 1, 13000, '2023-03-07'), (102, 2, 15000, '2023-02-01'), (103, 3, 20000, '2023-08-07'),
    (104, 4, 25000, '2023-11-02'), (105, 5, 28000, '2023-12-06'), (106, 6, 17500, '2023-04-03'),
    (107, 7, 31000, '2023-06-30'), (108, 8, 40000, '2023-07-05'), (109, 9, 24000, '2023-01-01'),
    (110, 10, 30000, '2023-01-08');

INSERT INTO payroll(emp_id, pay_date) VALUES(101, '2023-04-01'), (102, '2023-03-02'), (103, '2023-09-05'), (104, '2023-12-03'),
    (105, '2023-01-02'), (106, '2023-05-05'), (107, '2023-07-07'), (108, '2023-08-02'),
    (109, '2023-02-04'), (110, '2023-02-01');


2. List the name and department of employees who are working at the Software
   department. 

SELECT e.emp_name, d.dept_name
FROM employee e
JOIN paydetails p ON e.emp_id = p.emp_id
JOIN department d ON p.dept_id = d.dept_id
WHERE d.dept_name = 'Software';

3. List name and DOJ of all the employee names who joined between 1st January and June 
   30, 2023 

SELECT e.emp_name, p.DOJ
FROM employee e
JOIN paydetails p ON e.emp_id = p.emp_id
WHERE p.DOJ BETWEEN '2023-01-01' AND '2023-06-30';

4. Give names of the employees whose total salary is higher than 30000 BDT.

SELECT e.emp_name, (p.basic + (p.basic * 0.45) - (p.basic * 0.10)) AS total_salary
FROM employee e
JOIN paydetails p ON e.emp_id = p.emp_id
WHERE (p.basic + (p.basic * 0.45) - (p.basic * 0.10)) > 30000;

OR

SELECT e.emp_name, (p.basic + (p.basic * 0.45) - (p.basic * 0.10)) AS total_salary
FROM employee e
JOIN paydetails p ON e.emp_id = p.emp_id
HAVING total_salary > 30000;
 
5. Group the name of employees whose average total salary are higher than or equal to 
   20000 BDT. 

SELECT e.emp_name, AVG(p.basic + (p.basic * 0.45) - (p.basic * 0.10)) AS avg_total_salary
FROM employee e
JOIN paydetails p ON e.emp_id = p.emp_id
GROUP BY e.emp_name
HAVING avg_total_salary >= 20000;