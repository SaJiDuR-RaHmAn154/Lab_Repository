Database Schemas: 
Student(Stud_no : string, Stud_name: string, dept_no: Integer, Year: Integer, Semester: Integer) 
Department(dept_no: Integer, dept_name: string, building_no: Integer) 
Membership(Member_no: string, Stud_no: string, Member_date: date) 
Book(book_no: string, book_name: string, author_name: string) 
Book_issue(issue_no: integer, iss_date: date, Member_no: string, book_no: string) 
Return_renew(Member_no: string, book_no: string, return_date: date) 

CREATE TABLE Department (
    dept_no INT PRIMARY KEY,
    dept_name VARCHAR(30),
    building_no INT
);

CREATE TABLE Student (
    Stud_no VARCHAR(10) PRIMARY KEY,
    Stud_name VARCHAR(30) NOT NULL,
    dept_no INT,
    Year INT,
    Semester INT,
    FOREIGN KEY (dept_no) REFERENCES Department(dept_no)
);
CREATE TABLE Membership (
    Member_no VARCHAR(10) PRIMARY KEY,
    Stud_no VARCHAR(10),
    Member_date DATE,
    FOREIGN KEY (Stud_no) REFERENCES Student(Stud_no)
);
CREATE TABLE Book (
    book_no VARCHAR(10) PRIMARY KEY,
    book_name VARCHAR(100),
    author_name VARCHAR(30)
);
CREATE TABLE Book_issue (
    issue_no INT PRIMARY KEY,
    iss_date DATE,
    Member_no VARCHAR(10),
    book_no VARCHAR(10),
    FOREIGN KEY (Member_no) REFERENCES Membership(Member_no),
    FOREIGN KEY (book_no) REFERENCES Book(book_no)
);
CREATE TABLE Return_renew (
    Member_no VARCHAR(10),
    book_no VARCHAR(10),
    return_date DATE,
    PRIMARY KEY (Member_no, book_no),
    FOREIGN KEY (Member_no) REFERENCES Membership(Member_no),
    FOREIGN KEY (book_no) REFERENCES Book(book_no)
);

INSERT INTO Department VALUES (1, 'Computer Science', 101);
INSERT INTO Department VALUES (2, 'Electrical Engineering', 102);
INSERT INTO Department VALUES (3, 'Mechanical Engineering', 103);
INSERT INTO Department VALUES (4, 'Civil Engineering', 104);
INSERT INTO Department VALUES (5, 'Information Technology', 105);
INSERT INTO Department VALUES (6, 'Mathematics', 106);
INSERT INTO Department VALUES (7, 'Physics', 107);
INSERT INTO Department VALUES (8, 'Chemistry', 108);
INSERT INTO Department VALUES (9, 'Biotechnology', 109);
INSERT INTO Department VALUES (10, 'Business Administration', 110);

INSERT INTO Student VALUES ('C033001', 'Sajid', 1, 3, 1);
INSERT INTO Student VALUES ('C033002', 'Masum', 1, 4, 1);
INSERT INTO Student VALUES ('C033003', 'Sakib', 2, 2, 2);
INSERT INTO Student VALUES ('C033004', 'Munim', 3, 3, 1);
INSERT INTO Student VALUES ('C033005', 'Ovi', 4, 1, 1);
INSERT INTO Student VALUES ('C033006', 'Siam', 5, 2, 2);
INSERT INTO Student VALUES ('C033007', 'Alice', 6, 3, 2);
INSERT INTO Student VALUES ('C033008', 'Bob', 7, 4, 1);
INSERT INTO Student VALUES ('C033009', 'Miraz', 8, 2, 2);
INSERT INTO Student VALUES ('C033010', 'Soikot', 9, 3, 1);

INSERT INTO Membership VALUES ('M001', 'C033001', '2023-01-01');
INSERT INTO Membership VALUES ('M002', 'C033002', '2023-01-02');
INSERT INTO Membership VALUES ('M003', 'C033003', '2023-01-03');
INSERT INTO Membership VALUES ('M004', 'C033004', '2023-01-04');
INSERT INTO Membership VALUES ('M005', 'C033005', '2023-01-05');
INSERT INTO Membership VALUES ('M006', 'C033006', '2023-01-06');
INSERT INTO Membership VALUES ('M007', 'C033007', '2023-01-07');
INSERT INTO Membership VALUES ('M008', 'C033008', '2023-01-08');
INSERT INTO Membership VALUES ('M009', 'C033009', '2023-01-09');
INSERT INTO Membership VALUES ('M010', 'C033010', '2023-01-10');

INSERT INTO Book VALUES ('B001', 'Operating Systems', 'Tanenbum');
INSERT INTO Book VALUES ('B002', 'Data Structures', 'Mark Allen Weiss');
INSERT INTO Book VALUES ('B003', 'Database Systems', 'Ramez Elmasri');
INSERT INTO Book VALUES ('B004', 'Computer Networks', 'Tanenbum');
INSERT INTO Book VALUES ('B005', 'Artificial Intelligence', 'Stuart Russell');
INSERT INTO Book VALUES ('B006', 'Algorithms', 'Thomas H. Cormen');
INSERT INTO Book VALUES ('B007', 'Discrete Mathematics', 'Kenneth H. Rosen');
INSERT INTO Book VALUES ('B008', 'Linear Algebra', 'Gilbert Strang');
INSERT INTO Book VALUES ('B009', 'Quantum Physics', 'Richard Feynman');
INSERT INTO Book VALUES ('B010', 'Introduction to Algorithms', 'Charles Leiserson');


INSERT INTO Book_issue VALUES (1, '2023-01-01', 'M001', 'B001');
INSERT INTO Book_issue VALUES (2, '2023-01-02', 'M001', 'B002');
INSERT INTO Book_issue VALUES (3, '2023-01-03', 'M003', 'B003');
INSERT INTO Book_issue VALUES (4, '2023-01-04', 'M004', 'B004');
INSERT INTO Book_issue VALUES (5, '2023-01-05', 'M005', 'B005');
INSERT INTO Book_issue VALUES (6, '2023-01-06', 'M001', 'B006');
INSERT INTO Book_issue VALUES (7, '2023-01-07', 'M007', 'B007');
INSERT INTO Book_issue VALUES (8, '2023-01-08', 'M008', 'B008');
INSERT INTO Book_issue VALUES (9, '2023-01-09', 'M009', 'B009');
INSERT INTO Book_issue VALUES (10, '2023-01-10', 'M010', 'B010');

INSERT INTO Return_renew VALUES ('M001', 'B001', '2023-02-15');
INSERT INTO Return_renew VALUES ('M001', 'B002', '2023-02-01');
INSERT INTO Return_renew VALUES ('M003', 'B003', '2023-01-28');
INSERT INTO Return_renew VALUES ('M004', 'B004', '2023-02-02');
INSERT INTO Return_renew VALUES ('M005', 'B005', '2023-02-28');
INSERT INTO Return_renew VALUES ('M001', 'B006', '2023-02-17');
INSERT INTO Return_renew VALUES ('M007', 'B007', '2023-02-01');
INSERT INTO Return_renew VALUES ('M008', 'B008', '2023-02-25');
INSERT INTO Return_renew VALUES ('M009', 'B009', '2023-02-06');
INSERT INTO Return_renew VALUES ('M010', 'B010', '2023-02-05');


SQL:

1. List all the student and Book name, Author issued on date (e.g., 01-01-2013) 

SELECT S.Stud_name, B.book_name, B.author_name 
FROM Student S
JOIN Membership M ON S.Stud_no = M.Stud_no
JOIN Book_issue BI ON M.Member_no = BI.Member_no
JOIN Book B ON BI.book_no = B.book_no
WHERE BI.iss_date = '2023-01-01';

2. List the details of students who borrowed book whose author is Tanenbum

SELECT S.*
FROM Student S
JOIN Membership M ON S.Stud_no = M.Stud_no
JOIN Book_issue BI ON M.Member_no = BI.Member_no
JOIN Book B ON BI.book_no = B.book_no
WHERE B.author_name = 'Tanenbum';

3. Give a count of how many books have been borrowed by each student 

SELECT S.Stud_name, COUNT(BI.book_no) As Borrowed_Books
FROM Student S
LEFT OUTER JOIN Membership M ON S.Stud_no = M.Stud_no
LEFT OUTER JOIN Book_issue BI ON M.Member_no = BI.Member_no
GROUP BY S.Stud_name;


4. List the students who reached the borrowed limit 3 (i.e., none can borrow more than 3 books)

SELECT S.Stud_name
FROM Student S
JOIN Membership M ON S.Stud_no = M.Stud_no
JOIN Book_issue BI ON M.Member_no = BI.Member_no
GROUP BY S.Stud_name
HAVING COUNT(BI.book_no) >= 3;

5. List the students who returned the borrowed book after 30 days from his/her issuance. 

SELECT DISTINCT S.Stud_name
FROM Student S
JOIN Membership M ON S.Stud_no = M.Stud_no
JOIN Book_issue BI ON M.Member_no = BI.Member_no
JOIN Return_renew RR ON BI.Member_no = RR.Member_no AND BI.book_no = RR.book_no
WHERE datediff(RR.return_date,bi.iss_date)>30;

6. Calculate the penalty of each student who exceeds the borrowed period 30 days. Apply 25 Paisa 
per day for the penalty. 

SELECT S.Stud_no,S.Stud_name,SUM(datediff(RR.return_date,BI.iss_date)-30)*0.25 As Penalty
FROM Student S
JOIN Membership M ON S.Stud_no = M.Stud_no
JOIN Book_issue BI ON M.Member_no = BI.Member_no
JOIN Return_renew RR ON BI.Member_no = RR.Member_no AND BI.book_no = RR.book_no
WHERE datediff(RR.return_date,BI.iss_date)>30
GROUP BY S.Stud_no,S.Stud_name;

7. Give a list of books taken by student with stud_no C033002

SELECT B.book_name
FROM Book B
JOIN Book_issue BI ON B.book_no = BI.book_no
JOIN Membership M ON BI.Member_no = M.Member_no
WHERE M.Stud_no = 'C033001';




