$date
	Tue Oct 08 00:53:23 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module CPU_tb $end
$var wire 5 ! REG3 [4:0] $end
$var wire 5 " REG2 [4:0] $end
$var wire 5 # REG1 [4:0] $end
$var wire 5 $ REG0 [4:0] $end
$var wire 11 % RAM7 [10:0] $end
$var wire 11 & RAM6 [10:0] $end
$var wire 11 ' RAM5 [10:0] $end
$var wire 11 ( RAM4 [10:0] $end
$var wire 11 ) RAM3 [10:0] $end
$var wire 11 * RAM2 [10:0] $end
$var wire 11 + RAM1 [10:0] $end
$var wire 11 , RAM0 [10:0] $end
$var wire 11 - PI [10:0] $end
$var wire 3 . PC [2:0] $end
$var wire 5 / OutD [4:0] $end
$var reg 5 0 InD [4:0] $end
$var reg 1 1 InE $end
$var reg 1 2 PC_Enable $end
$var reg 3 3 RAM_Write_Address [2:0] $end
$var reg 11 4 RAM_Write_Data [10:0] $end
$var reg 1 5 RAM_Write_Enable $end
$var reg 1 6 clk $end
$var reg 1 7 reset $end
$scope module uut $end
$var wire 1 8 CPU_CLK $end
$var wire 5 9 InD [4:0] $end
$var wire 1 1 InE $end
$var wire 3 : PC [2:0] $end
$var wire 1 2 PC_Enable $end
$var wire 11 ; PI [10:0] $end
$var wire 3 < RAM_Write_Address [2:0] $end
$var wire 11 = RAM_Write_Data [10:0] $end
$var wire 1 5 RAM_Write_Enable $end
$var wire 3 > Write_Address [2:0] $end
$var wire 11 ? Write_Data [10:0] $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 @ dZF $end
$var wire 1 A dSF $end
$var wire 1 B dCF $end
$var wire 1 C ZF $end
$var wire 2 D WR [1:0] $end
$var wire 1 E SF $end
$var wire 5 F RR [4:0] $end
$var wire 1 G REG_EN $end
$var wire 5 H REG3 [4:0] $end
$var wire 5 I REG2 [4:0] $end
$var wire 5 J REG1 [4:0] $end
$var wire 5 K REG0 [4:0] $end
$var wire 2 L RB [1:0] $end
$var wire 11 M RAM7 [10:0] $end
$var wire 11 N RAM6 [10:0] $end
$var wire 11 O RAM5 [10:0] $end
$var wire 11 P RAM4 [10:0] $end
$var wire 11 Q RAM3 [10:0] $end
$var wire 11 R RAM2 [10:0] $end
$var wire 11 S RAM1 [10:0] $end
$var wire 11 T RAM0 [10:0] $end
$var wire 2 U RA [1:0] $end
$var wire 5 V R [4:0] $end
$var wire 11 W Program_Instruction [10:0] $end
$var wire 3 X Program_Address [2:0] $end
$var wire 5 Y OutD [4:0] $end
$var wire 4 Z Opcode [3:0] $end
$var wire 2 [ OP [1:0] $end
$var wire 3 \ Next_Program_Address [2:0] $end
$var wire 1 ] LD_SEL $end
$var wire 11 ^ LD_Data [10:0] $end
$var wire 3 _ LD_ADDR [2:0] $end
$var wire 1 ` JMP_SEL $end
$var wire 3 a JMP_ADDR [2:0] $end
$var wire 1 b IMM_SEL $end
$var wire 5 c IMM_DATA [4:0] $end
$var wire 1 d CF $end
$var wire 5 e B_Final [4:0] $end
$var wire 5 f B [4:0] $end
$var wire 5 g A [4:0] $end
$scope module ALU_circuit1 $end
$var wire 5 h B [4:0] $end
$var wire 1 C ZF $end
$var wire 1 E SF $end
$var wire 5 i R_ROL [4:0] $end
$var wire 5 j R_ADD_SUB [4:0] $end
$var wire 2 k OP [1:0] $end
$var wire 1 l CF_ADD_SUB $end
$var wire 1 d CF $end
$var wire 5 m A [4:0] $end
$var reg 5 n R [4:0] $end
$var reg 1 o Sel $end
$scope module ADD_SUB1 $end
$var wire 5 p B [4:0] $end
$var wire 1 o Sel $end
$var wire 5 q R [4:0] $end
$var wire 1 l CF $end
$var wire 5 r B_selected [4:0] $end
$var wire 5 s B_complement [4:0] $end
$var wire 5 t A [4:0] $end
$upscope $end
$scope module ROL1 $end
$var wire 5 u B [4:0] $end
$var wire 2 v B2bit [1:0] $end
$var wire 5 w A [4:0] $end
$var reg 5 x R [4:0] $end
$upscope $end
$upscope $end
$scope module CU_circuit1 $end
$var wire 4 y Opcode [3:0] $end
$var wire 1 @ ZF $end
$var wire 1 A SF $end
$var wire 1 G REG_EN $end
$var wire 2 z OP [1:0] $end
$var wire 1 ] LD_SEL $end
$var wire 1 ` JMP_SEL $end
$var wire 1 b IMM_SEL $end
$var wire 1 B CF $end
$upscope $end
$scope module FLAG_circuit1 $end
$var wire 1 d CF $end
$var wire 1 E SF $end
$var wire 1 C ZF $end
$var wire 1 8 clk $end
$var wire 1 B dCF $end
$var wire 1 A dSF $end
$var wire 1 @ dZF $end
$var wire 1 7 reset $end
$var reg 1 { CF_DFF $end
$var reg 1 A SF_DFF $end
$var reg 1 @ ZF_DFF $end
$upscope $end
$scope module PC_circuit1 $end
$var wire 3 | I [2:0] $end
$var wire 3 } O [2:0] $end
$var wire 1 8 clk $end
$var wire 1 7 reset $end
$var reg 3 ~ DFF [2:0] $end
$upscope $end
$scope module RAM_circuit1 $end
$var wire 11 !" RAMrow0 [10:0] $end
$var wire 11 "" RAMrow1 [10:0] $end
$var wire 11 #" RAMrow2 [10:0] $end
$var wire 11 $" RAMrow3 [10:0] $end
$var wire 11 %" RAMrow4 [10:0] $end
$var wire 11 &" RAMrow5 [10:0] $end
$var wire 11 '" RAMrow6 [10:0] $end
$var wire 11 (" RAMrow7 [10:0] $end
$var wire 3 )" Read_Address_1 [2:0] $end
$var wire 3 *" Read_Address_2 [2:0] $end
$var wire 11 +" Read_Data_1 [10:0] $end
$var wire 11 ," Read_Data_2 [10:0] $end
$var wire 3 -" Write_Address [2:0] $end
$var wire 11 ." Write_Data [10:0] $end
$var wire 1 5 Write_Enable $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 11 /" RD2_row7 [10:0] $end
$var wire 11 0" RD2_row6 [10:0] $end
$var wire 11 1" RD2_row5 [10:0] $end
$var wire 11 2" RD2_row4 [10:0] $end
$var wire 11 3" RD2_row3 [10:0] $end
$var wire 11 4" RD2_row2 [10:0] $end
$var wire 11 5" RD2_row1 [10:0] $end
$var wire 11 6" RD2_row0 [10:0] $end
$var wire 11 7" RD1_row7 [10:0] $end
$var wire 11 8" RD1_row6 [10:0] $end
$var wire 11 9" RD1_row5 [10:0] $end
$var wire 11 :" RD1_row4 [10:0] $end
$var wire 11 ;" RD1_row3 [10:0] $end
$var wire 11 <" RD1_row2 [10:0] $end
$var wire 11 =" RD1_row1 [10:0] $end
$var wire 11 >" RD1_row0 [10:0] $end
$var wire 11 ?" RAM_row7 [10:0] $end
$var wire 11 @" RAM_row6 [10:0] $end
$var wire 11 A" RAM_row5 [10:0] $end
$var wire 11 B" RAM_row4 [10:0] $end
$var wire 11 C" RAM_row3 [10:0] $end
$var wire 11 D" RAM_row2 [10:0] $end
$var wire 11 E" RAM_row1 [10:0] $end
$var wire 11 F" RAM_row0 [10:0] $end
$var reg 8 G" RD1_SEL [7:0] $end
$var reg 8 H" RD2_SEL [7:0] $end
$var reg 8 I" WR_SEL [7:0] $end
$scope module ram_row0 $end
$var wire 1 J" Read_Select_1 $end
$var wire 1 K" Read_Select_2 $end
$var wire 11 L" Write_Data [10:0] $end
$var wire 1 M" Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 11 N" Read_Data_2 [10:0] $end
$var wire 11 O" Read_Data_1 [10:0] $end
$var wire 11 P" RAM_row_data [10:0] $end
$scope module cir0thbit $end
$var wire 1 Q" RAM1bit_data $end
$var wire 1 J" Read_Select_1 $end
$var wire 1 K" Read_Select_2 $end
$var wire 1 R" Write_Data $end
$var wire 1 M" Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 S" Read_Data_2 $end
$var wire 1 T" Read_Data_1 $end
$var reg 1 U" DFF $end
$upscope $end
$scope module cir10thbit $end
$var wire 1 V" RAM1bit_data $end
$var wire 1 J" Read_Select_1 $end
$var wire 1 K" Read_Select_2 $end
$var wire 1 W" Write_Data $end
$var wire 1 M" Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 X" Read_Data_2 $end
$var wire 1 Y" Read_Data_1 $end
$var reg 1 Z" DFF $end
$upscope $end
$scope module cir1stbit $end
$var wire 1 [" RAM1bit_data $end
$var wire 1 J" Read_Select_1 $end
$var wire 1 K" Read_Select_2 $end
$var wire 1 \" Write_Data $end
$var wire 1 M" Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 ]" Read_Data_2 $end
$var wire 1 ^" Read_Data_1 $end
$var reg 1 _" DFF $end
$upscope $end
$scope module cir2ndbit $end
$var wire 1 `" RAM1bit_data $end
$var wire 1 J" Read_Select_1 $end
$var wire 1 K" Read_Select_2 $end
$var wire 1 a" Write_Data $end
$var wire 1 M" Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 b" Read_Data_2 $end
$var wire 1 c" Read_Data_1 $end
$var reg 1 d" DFF $end
$upscope $end
$scope module cir3rdbit $end
$var wire 1 e" RAM1bit_data $end
$var wire 1 J" Read_Select_1 $end
$var wire 1 K" Read_Select_2 $end
$var wire 1 f" Write_Data $end
$var wire 1 M" Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 g" Read_Data_2 $end
$var wire 1 h" Read_Data_1 $end
$var reg 1 i" DFF $end
$upscope $end
$scope module cir4thbit $end
$var wire 1 j" RAM1bit_data $end
$var wire 1 J" Read_Select_1 $end
$var wire 1 K" Read_Select_2 $end
$var wire 1 k" Write_Data $end
$var wire 1 M" Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 l" Read_Data_2 $end
$var wire 1 m" Read_Data_1 $end
$var reg 1 n" DFF $end
$upscope $end
$scope module cir5thbit $end
$var wire 1 o" RAM1bit_data $end
$var wire 1 J" Read_Select_1 $end
$var wire 1 K" Read_Select_2 $end
$var wire 1 p" Write_Data $end
$var wire 1 M" Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 q" Read_Data_2 $end
$var wire 1 r" Read_Data_1 $end
$var reg 1 s" DFF $end
$upscope $end
$scope module cir6thbit $end
$var wire 1 t" RAM1bit_data $end
$var wire 1 J" Read_Select_1 $end
$var wire 1 K" Read_Select_2 $end
$var wire 1 u" Write_Data $end
$var wire 1 M" Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 v" Read_Data_2 $end
$var wire 1 w" Read_Data_1 $end
$var reg 1 x" DFF $end
$upscope $end
$scope module cir7thbit $end
$var wire 1 y" RAM1bit_data $end
$var wire 1 J" Read_Select_1 $end
$var wire 1 K" Read_Select_2 $end
$var wire 1 z" Write_Data $end
$var wire 1 M" Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 {" Read_Data_2 $end
$var wire 1 |" Read_Data_1 $end
$var reg 1 }" DFF $end
$upscope $end
$scope module cir8thbit $end
$var wire 1 ~" RAM1bit_data $end
$var wire 1 J" Read_Select_1 $end
$var wire 1 K" Read_Select_2 $end
$var wire 1 !# Write_Data $end
$var wire 1 M" Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 "# Read_Data_2 $end
$var wire 1 ## Read_Data_1 $end
$var reg 1 $# DFF $end
$upscope $end
$scope module cir9thbit $end
$var wire 1 %# RAM1bit_data $end
$var wire 1 J" Read_Select_1 $end
$var wire 1 K" Read_Select_2 $end
$var wire 1 &# Write_Data $end
$var wire 1 M" Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 '# Read_Data_2 $end
$var wire 1 (# Read_Data_1 $end
$var reg 1 )# DFF $end
$upscope $end
$upscope $end
$scope module ram_row1 $end
$var wire 1 *# Read_Select_1 $end
$var wire 1 +# Read_Select_2 $end
$var wire 11 ,# Write_Data [10:0] $end
$var wire 1 -# Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 11 .# Read_Data_2 [10:0] $end
$var wire 11 /# Read_Data_1 [10:0] $end
$var wire 11 0# RAM_row_data [10:0] $end
$scope module cir0thbit $end
$var wire 1 1# RAM1bit_data $end
$var wire 1 *# Read_Select_1 $end
$var wire 1 +# Read_Select_2 $end
$var wire 1 2# Write_Data $end
$var wire 1 -# Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 3# Read_Data_2 $end
$var wire 1 4# Read_Data_1 $end
$var reg 1 5# DFF $end
$upscope $end
$scope module cir10thbit $end
$var wire 1 6# RAM1bit_data $end
$var wire 1 *# Read_Select_1 $end
$var wire 1 +# Read_Select_2 $end
$var wire 1 7# Write_Data $end
$var wire 1 -# Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 8# Read_Data_2 $end
$var wire 1 9# Read_Data_1 $end
$var reg 1 :# DFF $end
$upscope $end
$scope module cir1stbit $end
$var wire 1 ;# RAM1bit_data $end
$var wire 1 *# Read_Select_1 $end
$var wire 1 +# Read_Select_2 $end
$var wire 1 <# Write_Data $end
$var wire 1 -# Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 =# Read_Data_2 $end
$var wire 1 ># Read_Data_1 $end
$var reg 1 ?# DFF $end
$upscope $end
$scope module cir2ndbit $end
$var wire 1 @# RAM1bit_data $end
$var wire 1 *# Read_Select_1 $end
$var wire 1 +# Read_Select_2 $end
$var wire 1 A# Write_Data $end
$var wire 1 -# Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 B# Read_Data_2 $end
$var wire 1 C# Read_Data_1 $end
$var reg 1 D# DFF $end
$upscope $end
$scope module cir3rdbit $end
$var wire 1 E# RAM1bit_data $end
$var wire 1 *# Read_Select_1 $end
$var wire 1 +# Read_Select_2 $end
$var wire 1 F# Write_Data $end
$var wire 1 -# Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 G# Read_Data_2 $end
$var wire 1 H# Read_Data_1 $end
$var reg 1 I# DFF $end
$upscope $end
$scope module cir4thbit $end
$var wire 1 J# RAM1bit_data $end
$var wire 1 *# Read_Select_1 $end
$var wire 1 +# Read_Select_2 $end
$var wire 1 K# Write_Data $end
$var wire 1 -# Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 L# Read_Data_2 $end
$var wire 1 M# Read_Data_1 $end
$var reg 1 N# DFF $end
$upscope $end
$scope module cir5thbit $end
$var wire 1 O# RAM1bit_data $end
$var wire 1 *# Read_Select_1 $end
$var wire 1 +# Read_Select_2 $end
$var wire 1 P# Write_Data $end
$var wire 1 -# Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 Q# Read_Data_2 $end
$var wire 1 R# Read_Data_1 $end
$var reg 1 S# DFF $end
$upscope $end
$scope module cir6thbit $end
$var wire 1 T# RAM1bit_data $end
$var wire 1 *# Read_Select_1 $end
$var wire 1 +# Read_Select_2 $end
$var wire 1 U# Write_Data $end
$var wire 1 -# Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 V# Read_Data_2 $end
$var wire 1 W# Read_Data_1 $end
$var reg 1 X# DFF $end
$upscope $end
$scope module cir7thbit $end
$var wire 1 Y# RAM1bit_data $end
$var wire 1 *# Read_Select_1 $end
$var wire 1 +# Read_Select_2 $end
$var wire 1 Z# Write_Data $end
$var wire 1 -# Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 [# Read_Data_2 $end
$var wire 1 \# Read_Data_1 $end
$var reg 1 ]# DFF $end
$upscope $end
$scope module cir8thbit $end
$var wire 1 ^# RAM1bit_data $end
$var wire 1 *# Read_Select_1 $end
$var wire 1 +# Read_Select_2 $end
$var wire 1 _# Write_Data $end
$var wire 1 -# Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 `# Read_Data_2 $end
$var wire 1 a# Read_Data_1 $end
$var reg 1 b# DFF $end
$upscope $end
$scope module cir9thbit $end
$var wire 1 c# RAM1bit_data $end
$var wire 1 *# Read_Select_1 $end
$var wire 1 +# Read_Select_2 $end
$var wire 1 d# Write_Data $end
$var wire 1 -# Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 e# Read_Data_2 $end
$var wire 1 f# Read_Data_1 $end
$var reg 1 g# DFF $end
$upscope $end
$upscope $end
$scope module ram_row2 $end
$var wire 1 h# Read_Select_1 $end
$var wire 1 i# Read_Select_2 $end
$var wire 11 j# Write_Data [10:0] $end
$var wire 1 k# Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 11 l# Read_Data_2 [10:0] $end
$var wire 11 m# Read_Data_1 [10:0] $end
$var wire 11 n# RAM_row_data [10:0] $end
$scope module cir0thbit $end
$var wire 1 o# RAM1bit_data $end
$var wire 1 h# Read_Select_1 $end
$var wire 1 i# Read_Select_2 $end
$var wire 1 p# Write_Data $end
$var wire 1 k# Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 q# Read_Data_2 $end
$var wire 1 r# Read_Data_1 $end
$var reg 1 s# DFF $end
$upscope $end
$scope module cir10thbit $end
$var wire 1 t# RAM1bit_data $end
$var wire 1 h# Read_Select_1 $end
$var wire 1 i# Read_Select_2 $end
$var wire 1 u# Write_Data $end
$var wire 1 k# Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 v# Read_Data_2 $end
$var wire 1 w# Read_Data_1 $end
$var reg 1 x# DFF $end
$upscope $end
$scope module cir1stbit $end
$var wire 1 y# RAM1bit_data $end
$var wire 1 h# Read_Select_1 $end
$var wire 1 i# Read_Select_2 $end
$var wire 1 z# Write_Data $end
$var wire 1 k# Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 {# Read_Data_2 $end
$var wire 1 |# Read_Data_1 $end
$var reg 1 }# DFF $end
$upscope $end
$scope module cir2ndbit $end
$var wire 1 ~# RAM1bit_data $end
$var wire 1 h# Read_Select_1 $end
$var wire 1 i# Read_Select_2 $end
$var wire 1 !$ Write_Data $end
$var wire 1 k# Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 "$ Read_Data_2 $end
$var wire 1 #$ Read_Data_1 $end
$var reg 1 $$ DFF $end
$upscope $end
$scope module cir3rdbit $end
$var wire 1 %$ RAM1bit_data $end
$var wire 1 h# Read_Select_1 $end
$var wire 1 i# Read_Select_2 $end
$var wire 1 &$ Write_Data $end
$var wire 1 k# Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 '$ Read_Data_2 $end
$var wire 1 ($ Read_Data_1 $end
$var reg 1 )$ DFF $end
$upscope $end
$scope module cir4thbit $end
$var wire 1 *$ RAM1bit_data $end
$var wire 1 h# Read_Select_1 $end
$var wire 1 i# Read_Select_2 $end
$var wire 1 +$ Write_Data $end
$var wire 1 k# Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 ,$ Read_Data_2 $end
$var wire 1 -$ Read_Data_1 $end
$var reg 1 .$ DFF $end
$upscope $end
$scope module cir5thbit $end
$var wire 1 /$ RAM1bit_data $end
$var wire 1 h# Read_Select_1 $end
$var wire 1 i# Read_Select_2 $end
$var wire 1 0$ Write_Data $end
$var wire 1 k# Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 1$ Read_Data_2 $end
$var wire 1 2$ Read_Data_1 $end
$var reg 1 3$ DFF $end
$upscope $end
$scope module cir6thbit $end
$var wire 1 4$ RAM1bit_data $end
$var wire 1 h# Read_Select_1 $end
$var wire 1 i# Read_Select_2 $end
$var wire 1 5$ Write_Data $end
$var wire 1 k# Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 6$ Read_Data_2 $end
$var wire 1 7$ Read_Data_1 $end
$var reg 1 8$ DFF $end
$upscope $end
$scope module cir7thbit $end
$var wire 1 9$ RAM1bit_data $end
$var wire 1 h# Read_Select_1 $end
$var wire 1 i# Read_Select_2 $end
$var wire 1 :$ Write_Data $end
$var wire 1 k# Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 ;$ Read_Data_2 $end
$var wire 1 <$ Read_Data_1 $end
$var reg 1 =$ DFF $end
$upscope $end
$scope module cir8thbit $end
$var wire 1 >$ RAM1bit_data $end
$var wire 1 h# Read_Select_1 $end
$var wire 1 i# Read_Select_2 $end
$var wire 1 ?$ Write_Data $end
$var wire 1 k# Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 @$ Read_Data_2 $end
$var wire 1 A$ Read_Data_1 $end
$var reg 1 B$ DFF $end
$upscope $end
$scope module cir9thbit $end
$var wire 1 C$ RAM1bit_data $end
$var wire 1 h# Read_Select_1 $end
$var wire 1 i# Read_Select_2 $end
$var wire 1 D$ Write_Data $end
$var wire 1 k# Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 E$ Read_Data_2 $end
$var wire 1 F$ Read_Data_1 $end
$var reg 1 G$ DFF $end
$upscope $end
$upscope $end
$scope module ram_row3 $end
$var wire 1 H$ Read_Select_1 $end
$var wire 1 I$ Read_Select_2 $end
$var wire 11 J$ Write_Data [10:0] $end
$var wire 1 K$ Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 11 L$ Read_Data_2 [10:0] $end
$var wire 11 M$ Read_Data_1 [10:0] $end
$var wire 11 N$ RAM_row_data [10:0] $end
$scope module cir0thbit $end
$var wire 1 O$ RAM1bit_data $end
$var wire 1 H$ Read_Select_1 $end
$var wire 1 I$ Read_Select_2 $end
$var wire 1 P$ Write_Data $end
$var wire 1 K$ Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 Q$ Read_Data_2 $end
$var wire 1 R$ Read_Data_1 $end
$var reg 1 S$ DFF $end
$upscope $end
$scope module cir10thbit $end
$var wire 1 T$ RAM1bit_data $end
$var wire 1 H$ Read_Select_1 $end
$var wire 1 I$ Read_Select_2 $end
$var wire 1 U$ Write_Data $end
$var wire 1 K$ Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 V$ Read_Data_2 $end
$var wire 1 W$ Read_Data_1 $end
$var reg 1 X$ DFF $end
$upscope $end
$scope module cir1stbit $end
$var wire 1 Y$ RAM1bit_data $end
$var wire 1 H$ Read_Select_1 $end
$var wire 1 I$ Read_Select_2 $end
$var wire 1 Z$ Write_Data $end
$var wire 1 K$ Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 [$ Read_Data_2 $end
$var wire 1 \$ Read_Data_1 $end
$var reg 1 ]$ DFF $end
$upscope $end
$scope module cir2ndbit $end
$var wire 1 ^$ RAM1bit_data $end
$var wire 1 H$ Read_Select_1 $end
$var wire 1 I$ Read_Select_2 $end
$var wire 1 _$ Write_Data $end
$var wire 1 K$ Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 `$ Read_Data_2 $end
$var wire 1 a$ Read_Data_1 $end
$var reg 1 b$ DFF $end
$upscope $end
$scope module cir3rdbit $end
$var wire 1 c$ RAM1bit_data $end
$var wire 1 H$ Read_Select_1 $end
$var wire 1 I$ Read_Select_2 $end
$var wire 1 d$ Write_Data $end
$var wire 1 K$ Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 e$ Read_Data_2 $end
$var wire 1 f$ Read_Data_1 $end
$var reg 1 g$ DFF $end
$upscope $end
$scope module cir4thbit $end
$var wire 1 h$ RAM1bit_data $end
$var wire 1 H$ Read_Select_1 $end
$var wire 1 I$ Read_Select_2 $end
$var wire 1 i$ Write_Data $end
$var wire 1 K$ Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 j$ Read_Data_2 $end
$var wire 1 k$ Read_Data_1 $end
$var reg 1 l$ DFF $end
$upscope $end
$scope module cir5thbit $end
$var wire 1 m$ RAM1bit_data $end
$var wire 1 H$ Read_Select_1 $end
$var wire 1 I$ Read_Select_2 $end
$var wire 1 n$ Write_Data $end
$var wire 1 K$ Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 o$ Read_Data_2 $end
$var wire 1 p$ Read_Data_1 $end
$var reg 1 q$ DFF $end
$upscope $end
$scope module cir6thbit $end
$var wire 1 r$ RAM1bit_data $end
$var wire 1 H$ Read_Select_1 $end
$var wire 1 I$ Read_Select_2 $end
$var wire 1 s$ Write_Data $end
$var wire 1 K$ Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 t$ Read_Data_2 $end
$var wire 1 u$ Read_Data_1 $end
$var reg 1 v$ DFF $end
$upscope $end
$scope module cir7thbit $end
$var wire 1 w$ RAM1bit_data $end
$var wire 1 H$ Read_Select_1 $end
$var wire 1 I$ Read_Select_2 $end
$var wire 1 x$ Write_Data $end
$var wire 1 K$ Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 y$ Read_Data_2 $end
$var wire 1 z$ Read_Data_1 $end
$var reg 1 {$ DFF $end
$upscope $end
$scope module cir8thbit $end
$var wire 1 |$ RAM1bit_data $end
$var wire 1 H$ Read_Select_1 $end
$var wire 1 I$ Read_Select_2 $end
$var wire 1 }$ Write_Data $end
$var wire 1 K$ Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 ~$ Read_Data_2 $end
$var wire 1 !% Read_Data_1 $end
$var reg 1 "% DFF $end
$upscope $end
$scope module cir9thbit $end
$var wire 1 #% RAM1bit_data $end
$var wire 1 H$ Read_Select_1 $end
$var wire 1 I$ Read_Select_2 $end
$var wire 1 $% Write_Data $end
$var wire 1 K$ Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 %% Read_Data_2 $end
$var wire 1 &% Read_Data_1 $end
$var reg 1 '% DFF $end
$upscope $end
$upscope $end
$scope module ram_row4 $end
$var wire 1 (% Read_Select_1 $end
$var wire 1 )% Read_Select_2 $end
$var wire 11 *% Write_Data [10:0] $end
$var wire 1 +% Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 11 ,% Read_Data_2 [10:0] $end
$var wire 11 -% Read_Data_1 [10:0] $end
$var wire 11 .% RAM_row_data [10:0] $end
$scope module cir0thbit $end
$var wire 1 /% RAM1bit_data $end
$var wire 1 (% Read_Select_1 $end
$var wire 1 )% Read_Select_2 $end
$var wire 1 0% Write_Data $end
$var wire 1 +% Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 1% Read_Data_2 $end
$var wire 1 2% Read_Data_1 $end
$var reg 1 3% DFF $end
$upscope $end
$scope module cir10thbit $end
$var wire 1 4% RAM1bit_data $end
$var wire 1 (% Read_Select_1 $end
$var wire 1 )% Read_Select_2 $end
$var wire 1 5% Write_Data $end
$var wire 1 +% Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 6% Read_Data_2 $end
$var wire 1 7% Read_Data_1 $end
$var reg 1 8% DFF $end
$upscope $end
$scope module cir1stbit $end
$var wire 1 9% RAM1bit_data $end
$var wire 1 (% Read_Select_1 $end
$var wire 1 )% Read_Select_2 $end
$var wire 1 :% Write_Data $end
$var wire 1 +% Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 ;% Read_Data_2 $end
$var wire 1 <% Read_Data_1 $end
$var reg 1 =% DFF $end
$upscope $end
$scope module cir2ndbit $end
$var wire 1 >% RAM1bit_data $end
$var wire 1 (% Read_Select_1 $end
$var wire 1 )% Read_Select_2 $end
$var wire 1 ?% Write_Data $end
$var wire 1 +% Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 @% Read_Data_2 $end
$var wire 1 A% Read_Data_1 $end
$var reg 1 B% DFF $end
$upscope $end
$scope module cir3rdbit $end
$var wire 1 C% RAM1bit_data $end
$var wire 1 (% Read_Select_1 $end
$var wire 1 )% Read_Select_2 $end
$var wire 1 D% Write_Data $end
$var wire 1 +% Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 E% Read_Data_2 $end
$var wire 1 F% Read_Data_1 $end
$var reg 1 G% DFF $end
$upscope $end
$scope module cir4thbit $end
$var wire 1 H% RAM1bit_data $end
$var wire 1 (% Read_Select_1 $end
$var wire 1 )% Read_Select_2 $end
$var wire 1 I% Write_Data $end
$var wire 1 +% Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 J% Read_Data_2 $end
$var wire 1 K% Read_Data_1 $end
$var reg 1 L% DFF $end
$upscope $end
$scope module cir5thbit $end
$var wire 1 M% RAM1bit_data $end
$var wire 1 (% Read_Select_1 $end
$var wire 1 )% Read_Select_2 $end
$var wire 1 N% Write_Data $end
$var wire 1 +% Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 O% Read_Data_2 $end
$var wire 1 P% Read_Data_1 $end
$var reg 1 Q% DFF $end
$upscope $end
$scope module cir6thbit $end
$var wire 1 R% RAM1bit_data $end
$var wire 1 (% Read_Select_1 $end
$var wire 1 )% Read_Select_2 $end
$var wire 1 S% Write_Data $end
$var wire 1 +% Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 T% Read_Data_2 $end
$var wire 1 U% Read_Data_1 $end
$var reg 1 V% DFF $end
$upscope $end
$scope module cir7thbit $end
$var wire 1 W% RAM1bit_data $end
$var wire 1 (% Read_Select_1 $end
$var wire 1 )% Read_Select_2 $end
$var wire 1 X% Write_Data $end
$var wire 1 +% Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 Y% Read_Data_2 $end
$var wire 1 Z% Read_Data_1 $end
$var reg 1 [% DFF $end
$upscope $end
$scope module cir8thbit $end
$var wire 1 \% RAM1bit_data $end
$var wire 1 (% Read_Select_1 $end
$var wire 1 )% Read_Select_2 $end
$var wire 1 ]% Write_Data $end
$var wire 1 +% Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 ^% Read_Data_2 $end
$var wire 1 _% Read_Data_1 $end
$var reg 1 `% DFF $end
$upscope $end
$scope module cir9thbit $end
$var wire 1 a% RAM1bit_data $end
$var wire 1 (% Read_Select_1 $end
$var wire 1 )% Read_Select_2 $end
$var wire 1 b% Write_Data $end
$var wire 1 +% Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 c% Read_Data_2 $end
$var wire 1 d% Read_Data_1 $end
$var reg 1 e% DFF $end
$upscope $end
$upscope $end
$scope module ram_row5 $end
$var wire 1 f% Read_Select_1 $end
$var wire 1 g% Read_Select_2 $end
$var wire 11 h% Write_Data [10:0] $end
$var wire 1 i% Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 11 j% Read_Data_2 [10:0] $end
$var wire 11 k% Read_Data_1 [10:0] $end
$var wire 11 l% RAM_row_data [10:0] $end
$scope module cir0thbit $end
$var wire 1 m% RAM1bit_data $end
$var wire 1 f% Read_Select_1 $end
$var wire 1 g% Read_Select_2 $end
$var wire 1 n% Write_Data $end
$var wire 1 i% Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 o% Read_Data_2 $end
$var wire 1 p% Read_Data_1 $end
$var reg 1 q% DFF $end
$upscope $end
$scope module cir10thbit $end
$var wire 1 r% RAM1bit_data $end
$var wire 1 f% Read_Select_1 $end
$var wire 1 g% Read_Select_2 $end
$var wire 1 s% Write_Data $end
$var wire 1 i% Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 t% Read_Data_2 $end
$var wire 1 u% Read_Data_1 $end
$var reg 1 v% DFF $end
$upscope $end
$scope module cir1stbit $end
$var wire 1 w% RAM1bit_data $end
$var wire 1 f% Read_Select_1 $end
$var wire 1 g% Read_Select_2 $end
$var wire 1 x% Write_Data $end
$var wire 1 i% Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 y% Read_Data_2 $end
$var wire 1 z% Read_Data_1 $end
$var reg 1 {% DFF $end
$upscope $end
$scope module cir2ndbit $end
$var wire 1 |% RAM1bit_data $end
$var wire 1 f% Read_Select_1 $end
$var wire 1 g% Read_Select_2 $end
$var wire 1 }% Write_Data $end
$var wire 1 i% Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 ~% Read_Data_2 $end
$var wire 1 !& Read_Data_1 $end
$var reg 1 "& DFF $end
$upscope $end
$scope module cir3rdbit $end
$var wire 1 #& RAM1bit_data $end
$var wire 1 f% Read_Select_1 $end
$var wire 1 g% Read_Select_2 $end
$var wire 1 $& Write_Data $end
$var wire 1 i% Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 %& Read_Data_2 $end
$var wire 1 && Read_Data_1 $end
$var reg 1 '& DFF $end
$upscope $end
$scope module cir4thbit $end
$var wire 1 (& RAM1bit_data $end
$var wire 1 f% Read_Select_1 $end
$var wire 1 g% Read_Select_2 $end
$var wire 1 )& Write_Data $end
$var wire 1 i% Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 *& Read_Data_2 $end
$var wire 1 +& Read_Data_1 $end
$var reg 1 ,& DFF $end
$upscope $end
$scope module cir5thbit $end
$var wire 1 -& RAM1bit_data $end
$var wire 1 f% Read_Select_1 $end
$var wire 1 g% Read_Select_2 $end
$var wire 1 .& Write_Data $end
$var wire 1 i% Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 /& Read_Data_2 $end
$var wire 1 0& Read_Data_1 $end
$var reg 1 1& DFF $end
$upscope $end
$scope module cir6thbit $end
$var wire 1 2& RAM1bit_data $end
$var wire 1 f% Read_Select_1 $end
$var wire 1 g% Read_Select_2 $end
$var wire 1 3& Write_Data $end
$var wire 1 i% Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 4& Read_Data_2 $end
$var wire 1 5& Read_Data_1 $end
$var reg 1 6& DFF $end
$upscope $end
$scope module cir7thbit $end
$var wire 1 7& RAM1bit_data $end
$var wire 1 f% Read_Select_1 $end
$var wire 1 g% Read_Select_2 $end
$var wire 1 8& Write_Data $end
$var wire 1 i% Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 9& Read_Data_2 $end
$var wire 1 :& Read_Data_1 $end
$var reg 1 ;& DFF $end
$upscope $end
$scope module cir8thbit $end
$var wire 1 <& RAM1bit_data $end
$var wire 1 f% Read_Select_1 $end
$var wire 1 g% Read_Select_2 $end
$var wire 1 =& Write_Data $end
$var wire 1 i% Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 >& Read_Data_2 $end
$var wire 1 ?& Read_Data_1 $end
$var reg 1 @& DFF $end
$upscope $end
$scope module cir9thbit $end
$var wire 1 A& RAM1bit_data $end
$var wire 1 f% Read_Select_1 $end
$var wire 1 g% Read_Select_2 $end
$var wire 1 B& Write_Data $end
$var wire 1 i% Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 C& Read_Data_2 $end
$var wire 1 D& Read_Data_1 $end
$var reg 1 E& DFF $end
$upscope $end
$upscope $end
$scope module ram_row6 $end
$var wire 1 F& Read_Select_1 $end
$var wire 1 G& Read_Select_2 $end
$var wire 11 H& Write_Data [10:0] $end
$var wire 1 I& Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 11 J& Read_Data_2 [10:0] $end
$var wire 11 K& Read_Data_1 [10:0] $end
$var wire 11 L& RAM_row_data [10:0] $end
$scope module cir0thbit $end
$var wire 1 M& RAM1bit_data $end
$var wire 1 F& Read_Select_1 $end
$var wire 1 G& Read_Select_2 $end
$var wire 1 N& Write_Data $end
$var wire 1 I& Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 O& Read_Data_2 $end
$var wire 1 P& Read_Data_1 $end
$var reg 1 Q& DFF $end
$upscope $end
$scope module cir10thbit $end
$var wire 1 R& RAM1bit_data $end
$var wire 1 F& Read_Select_1 $end
$var wire 1 G& Read_Select_2 $end
$var wire 1 S& Write_Data $end
$var wire 1 I& Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 T& Read_Data_2 $end
$var wire 1 U& Read_Data_1 $end
$var reg 1 V& DFF $end
$upscope $end
$scope module cir1stbit $end
$var wire 1 W& RAM1bit_data $end
$var wire 1 F& Read_Select_1 $end
$var wire 1 G& Read_Select_2 $end
$var wire 1 X& Write_Data $end
$var wire 1 I& Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 Y& Read_Data_2 $end
$var wire 1 Z& Read_Data_1 $end
$var reg 1 [& DFF $end
$upscope $end
$scope module cir2ndbit $end
$var wire 1 \& RAM1bit_data $end
$var wire 1 F& Read_Select_1 $end
$var wire 1 G& Read_Select_2 $end
$var wire 1 ]& Write_Data $end
$var wire 1 I& Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 ^& Read_Data_2 $end
$var wire 1 _& Read_Data_1 $end
$var reg 1 `& DFF $end
$upscope $end
$scope module cir3rdbit $end
$var wire 1 a& RAM1bit_data $end
$var wire 1 F& Read_Select_1 $end
$var wire 1 G& Read_Select_2 $end
$var wire 1 b& Write_Data $end
$var wire 1 I& Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 c& Read_Data_2 $end
$var wire 1 d& Read_Data_1 $end
$var reg 1 e& DFF $end
$upscope $end
$scope module cir4thbit $end
$var wire 1 f& RAM1bit_data $end
$var wire 1 F& Read_Select_1 $end
$var wire 1 G& Read_Select_2 $end
$var wire 1 g& Write_Data $end
$var wire 1 I& Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 h& Read_Data_2 $end
$var wire 1 i& Read_Data_1 $end
$var reg 1 j& DFF $end
$upscope $end
$scope module cir5thbit $end
$var wire 1 k& RAM1bit_data $end
$var wire 1 F& Read_Select_1 $end
$var wire 1 G& Read_Select_2 $end
$var wire 1 l& Write_Data $end
$var wire 1 I& Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 m& Read_Data_2 $end
$var wire 1 n& Read_Data_1 $end
$var reg 1 o& DFF $end
$upscope $end
$scope module cir6thbit $end
$var wire 1 p& RAM1bit_data $end
$var wire 1 F& Read_Select_1 $end
$var wire 1 G& Read_Select_2 $end
$var wire 1 q& Write_Data $end
$var wire 1 I& Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 r& Read_Data_2 $end
$var wire 1 s& Read_Data_1 $end
$var reg 1 t& DFF $end
$upscope $end
$scope module cir7thbit $end
$var wire 1 u& RAM1bit_data $end
$var wire 1 F& Read_Select_1 $end
$var wire 1 G& Read_Select_2 $end
$var wire 1 v& Write_Data $end
$var wire 1 I& Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 w& Read_Data_2 $end
$var wire 1 x& Read_Data_1 $end
$var reg 1 y& DFF $end
$upscope $end
$scope module cir8thbit $end
$var wire 1 z& RAM1bit_data $end
$var wire 1 F& Read_Select_1 $end
$var wire 1 G& Read_Select_2 $end
$var wire 1 {& Write_Data $end
$var wire 1 I& Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 |& Read_Data_2 $end
$var wire 1 }& Read_Data_1 $end
$var reg 1 ~& DFF $end
$upscope $end
$scope module cir9thbit $end
$var wire 1 !' RAM1bit_data $end
$var wire 1 F& Read_Select_1 $end
$var wire 1 G& Read_Select_2 $end
$var wire 1 "' Write_Data $end
$var wire 1 I& Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 #' Read_Data_2 $end
$var wire 1 $' Read_Data_1 $end
$var reg 1 %' DFF $end
$upscope $end
$upscope $end
$scope module ram_row7 $end
$var wire 1 &' Read_Select_1 $end
$var wire 1 '' Read_Select_2 $end
$var wire 11 (' Write_Data [10:0] $end
$var wire 1 )' Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 11 *' Read_Data_2 [10:0] $end
$var wire 11 +' Read_Data_1 [10:0] $end
$var wire 11 ,' RAM_row_data [10:0] $end
$scope module cir0thbit $end
$var wire 1 -' RAM1bit_data $end
$var wire 1 &' Read_Select_1 $end
$var wire 1 '' Read_Select_2 $end
$var wire 1 .' Write_Data $end
$var wire 1 )' Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 /' Read_Data_2 $end
$var wire 1 0' Read_Data_1 $end
$var reg 1 1' DFF $end
$upscope $end
$scope module cir10thbit $end
$var wire 1 2' RAM1bit_data $end
$var wire 1 &' Read_Select_1 $end
$var wire 1 '' Read_Select_2 $end
$var wire 1 3' Write_Data $end
$var wire 1 )' Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 4' Read_Data_2 $end
$var wire 1 5' Read_Data_1 $end
$var reg 1 6' DFF $end
$upscope $end
$scope module cir1stbit $end
$var wire 1 7' RAM1bit_data $end
$var wire 1 &' Read_Select_1 $end
$var wire 1 '' Read_Select_2 $end
$var wire 1 8' Write_Data $end
$var wire 1 )' Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 9' Read_Data_2 $end
$var wire 1 :' Read_Data_1 $end
$var reg 1 ;' DFF $end
$upscope $end
$scope module cir2ndbit $end
$var wire 1 <' RAM1bit_data $end
$var wire 1 &' Read_Select_1 $end
$var wire 1 '' Read_Select_2 $end
$var wire 1 =' Write_Data $end
$var wire 1 )' Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 >' Read_Data_2 $end
$var wire 1 ?' Read_Data_1 $end
$var reg 1 @' DFF $end
$upscope $end
$scope module cir3rdbit $end
$var wire 1 A' RAM1bit_data $end
$var wire 1 &' Read_Select_1 $end
$var wire 1 '' Read_Select_2 $end
$var wire 1 B' Write_Data $end
$var wire 1 )' Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 C' Read_Data_2 $end
$var wire 1 D' Read_Data_1 $end
$var reg 1 E' DFF $end
$upscope $end
$scope module cir4thbit $end
$var wire 1 F' RAM1bit_data $end
$var wire 1 &' Read_Select_1 $end
$var wire 1 '' Read_Select_2 $end
$var wire 1 G' Write_Data $end
$var wire 1 )' Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 H' Read_Data_2 $end
$var wire 1 I' Read_Data_1 $end
$var reg 1 J' DFF $end
$upscope $end
$scope module cir5thbit $end
$var wire 1 K' RAM1bit_data $end
$var wire 1 &' Read_Select_1 $end
$var wire 1 '' Read_Select_2 $end
$var wire 1 L' Write_Data $end
$var wire 1 )' Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 M' Read_Data_2 $end
$var wire 1 N' Read_Data_1 $end
$var reg 1 O' DFF $end
$upscope $end
$scope module cir6thbit $end
$var wire 1 P' RAM1bit_data $end
$var wire 1 &' Read_Select_1 $end
$var wire 1 '' Read_Select_2 $end
$var wire 1 Q' Write_Data $end
$var wire 1 )' Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 R' Read_Data_2 $end
$var wire 1 S' Read_Data_1 $end
$var reg 1 T' DFF $end
$upscope $end
$scope module cir7thbit $end
$var wire 1 U' RAM1bit_data $end
$var wire 1 &' Read_Select_1 $end
$var wire 1 '' Read_Select_2 $end
$var wire 1 V' Write_Data $end
$var wire 1 )' Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 W' Read_Data_2 $end
$var wire 1 X' Read_Data_1 $end
$var reg 1 Y' DFF $end
$upscope $end
$scope module cir8thbit $end
$var wire 1 Z' RAM1bit_data $end
$var wire 1 &' Read_Select_1 $end
$var wire 1 '' Read_Select_2 $end
$var wire 1 [' Write_Data $end
$var wire 1 )' Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 \' Read_Data_2 $end
$var wire 1 ]' Read_Data_1 $end
$var reg 1 ^' DFF $end
$upscope $end
$scope module cir9thbit $end
$var wire 1 _' RAM1bit_data $end
$var wire 1 &' Read_Select_1 $end
$var wire 1 '' Read_Select_2 $end
$var wire 1 `' Write_Data $end
$var wire 1 )' Write_Select $end
$var wire 1 6 clk $end
$var wire 1 7 reset $end
$var wire 1 a' Read_Data_2 $end
$var wire 1 b' Read_Data_1 $end
$var reg 1 c' DFF $end
$upscope $end
$upscope $end
$upscope $end
$scope module RF_circuit1 $end
$var wire 5 d' InD [4:0] $end
$var wire 1 1 InE $end
$var wire 5 e' OutD [4:0] $end
$var wire 5 f' R0 [4:0] $end
$var wire 5 g' R1 [4:0] $end
$var wire 5 h' R2 [4:0] $end
$var wire 5 i' R3 [4:0] $end
$var wire 2 j' RA [1:0] $end
$var wire 2 k' RB [1:0] $end
$var wire 1 G RE $end
$var wire 2 l' WR [1:0] $end
$var wire 5 m' WRD [4:0] $end
$var wire 1 8 clk $end
$var wire 1 7 reset $end
$var wire 5 n' R11 [4:0] $end
$var wire 5 o' R10 [4:0] $end
$var wire 5 p' R01 [4:0] $end
$var wire 5 q' R00 [4:0] $end
$var reg 5 r' A [4:0] $end
$var reg 5 s' B [4:0] $end
$var reg 4 t' WR_SEL [3:0] $end
$scope module Reg00 $end
$var wire 5 u' Din [4:0] $end
$var wire 1 v' Sel $end
$var wire 1 8 clk $end
$var wire 1 7 reset $end
$var wire 5 w' Dout [4:0] $end
$scope module cir1stbit $end
$var wire 1 x' Din $end
$var wire 1 y' Dout $end
$var wire 1 v' Sel $end
$var wire 1 8 clk $end
$var wire 1 7 reset $end
$var reg 1 y' DFF $end
$upscope $end
$scope module cir2ndbit $end
$var wire 1 z' Din $end
$var wire 1 {' Dout $end
$var wire 1 v' Sel $end
$var wire 1 8 clk $end
$var wire 1 7 reset $end
$var reg 1 {' DFF $end
$upscope $end
$scope module cir3rdbit $end
$var wire 1 |' Din $end
$var wire 1 }' Dout $end
$var wire 1 v' Sel $end
$var wire 1 8 clk $end
$var wire 1 7 reset $end
$var reg 1 }' DFF $end
$upscope $end
$scope module cir4thbit $end
$var wire 1 ~' Din $end
$var wire 1 !( Dout $end
$var wire 1 v' Sel $end
$var wire 1 8 clk $end
$var wire 1 7 reset $end
$var reg 1 !( DFF $end
$upscope $end
$scope module cir5thbit $end
$var wire 1 "( Din $end
$var wire 1 #( Dout $end
$var wire 1 v' Sel $end
$var wire 1 8 clk $end
$var wire 1 7 reset $end
$var reg 1 #( DFF $end
$upscope $end
$upscope $end
$scope module Reg01 $end
$var wire 5 $( Din [4:0] $end
$var wire 1 %( Sel $end
$var wire 1 8 clk $end
$var wire 1 7 reset $end
$var wire 5 &( Dout [4:0] $end
$scope module cir1stbit $end
$var wire 1 '( Din $end
$var wire 1 (( Dout $end
$var wire 1 %( Sel $end
$var wire 1 8 clk $end
$var wire 1 7 reset $end
$var reg 1 (( DFF $end
$upscope $end
$scope module cir2ndbit $end
$var wire 1 )( Din $end
$var wire 1 *( Dout $end
$var wire 1 %( Sel $end
$var wire 1 8 clk $end
$var wire 1 7 reset $end
$var reg 1 *( DFF $end
$upscope $end
$scope module cir3rdbit $end
$var wire 1 +( Din $end
$var wire 1 ,( Dout $end
$var wire 1 %( Sel $end
$var wire 1 8 clk $end
$var wire 1 7 reset $end
$var reg 1 ,( DFF $end
$upscope $end
$scope module cir4thbit $end
$var wire 1 -( Din $end
$var wire 1 .( Dout $end
$var wire 1 %( Sel $end
$var wire 1 8 clk $end
$var wire 1 7 reset $end
$var reg 1 .( DFF $end
$upscope $end
$scope module cir5thbit $end
$var wire 1 /( Din $end
$var wire 1 0( Dout $end
$var wire 1 %( Sel $end
$var wire 1 8 clk $end
$var wire 1 7 reset $end
$var reg 1 0( DFF $end
$upscope $end
$upscope $end
$scope module Reg10 $end
$var wire 5 1( Din [4:0] $end
$var wire 1 1 Sel $end
$var wire 1 8 clk $end
$var wire 1 7 reset $end
$var wire 5 2( Dout [4:0] $end
$scope module cir1stbit $end
$var wire 1 3( Din $end
$var wire 1 4( Dout $end
$var wire 1 1 Sel $end
$var wire 1 8 clk $end
$var wire 1 7 reset $end
$var reg 1 4( DFF $end
$upscope $end
$scope module cir2ndbit $end
$var wire 1 5( Din $end
$var wire 1 6( Dout $end
$var wire 1 1 Sel $end
$var wire 1 8 clk $end
$var wire 1 7 reset $end
$var reg 1 6( DFF $end
$upscope $end
$scope module cir3rdbit $end
$var wire 1 7( Din $end
$var wire 1 8( Dout $end
$var wire 1 1 Sel $end
$var wire 1 8 clk $end
$var wire 1 7 reset $end
$var reg 1 8( DFF $end
$upscope $end
$scope module cir4thbit $end
$var wire 1 9( Din $end
$var wire 1 :( Dout $end
$var wire 1 1 Sel $end
$var wire 1 8 clk $end
$var wire 1 7 reset $end
$var reg 1 :( DFF $end
$upscope $end
$scope module cir5thbit $end
$var wire 1 ;( Din $end
$var wire 1 <( Dout $end
$var wire 1 1 Sel $end
$var wire 1 8 clk $end
$var wire 1 7 reset $end
$var reg 1 <( DFF $end
$upscope $end
$upscope $end
$scope module Reg11 $end
$var wire 5 =( Din [4:0] $end
$var wire 1 >( Sel $end
$var wire 1 8 clk $end
$var wire 1 7 reset $end
$var wire 5 ?( Dout [4:0] $end
$scope module cir1stbit $end
$var wire 1 @( Din $end
$var wire 1 A( Dout $end
$var wire 1 >( Sel $end
$var wire 1 8 clk $end
$var wire 1 7 reset $end
$var reg 1 A( DFF $end
$upscope $end
$scope module cir2ndbit $end
$var wire 1 B( Din $end
$var wire 1 C( Dout $end
$var wire 1 >( Sel $end
$var wire 1 8 clk $end
$var wire 1 7 reset $end
$var reg 1 C( DFF $end
$upscope $end
$scope module cir3rdbit $end
$var wire 1 D( Din $end
$var wire 1 E( Dout $end
$var wire 1 >( Sel $end
$var wire 1 8 clk $end
$var wire 1 7 reset $end
$var reg 1 E( DFF $end
$upscope $end
$scope module cir4thbit $end
$var wire 1 F( Din $end
$var wire 1 G( Dout $end
$var wire 1 >( Sel $end
$var wire 1 8 clk $end
$var wire 1 7 reset $end
$var reg 1 G( DFF $end
$upscope $end
$scope module cir5thbit $end
$var wire 1 H( Din $end
$var wire 1 I( Dout $end
$var wire 1 >( Sel $end
$var wire 1 8 clk $end
$var wire 1 7 reset $end
$var reg 1 I( DFF $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
0I(
0H(
0G(
0F(
0E(
0D(
0C(
0B(
0A(
0@(
b0 ?(
0>(
b0 =(
0<(
0;(
0:(
09(
08(
07(
06(
05(
04(
03(
b0 2(
b0 1(
00(
0/(
0.(
0-(
0,(
0+(
0*(
0)(
0((
0'(
b0 &(
0%(
b0 $(
0#(
0"(
0!(
0~'
0}'
0|'
0{'
0z'
0y'
0x'
b0 w'
0v'
b0 u'
b0 t'
b0 s'
b0 r'
b0 q'
b0 p'
b0 o'
b0 n'
b0 m'
b0 l'
b0 k'
b0 j'
b0 i'
b0 h'
b0 g'
b0 f'
b0 e'
b0 d'
0c'
0b'
0a'
0`'
0_'
0^'
0]'
0\'
0['
0Z'
0Y'
0X'
0W'
0V'
0U'
0T'
0S'
0R'
0Q'
0P'
0O'
0N'
0M'
0L'
0K'
0J'
0I'
0H'
0G'
0F'
0E'
0D'
0C'
0B'
0A'
0@'
0?'
0>'
0='
0<'
0;'
0:'
09'
08'
07'
06'
05'
04'
03'
02'
01'
00'
0/'
0.'
0-'
b0 ,'
b0 +'
b0 *'
0)'
b0 ('
0''
1&'
0%'
0$'
0#'
0"'
0!'
0~&
0}&
0|&
0{&
0z&
0y&
0x&
0w&
0v&
0u&
0t&
0s&
0r&
0q&
0p&
0o&
0n&
0m&
0l&
0k&
0j&
0i&
0h&
0g&
0f&
0e&
0d&
0c&
0b&
0a&
0`&
0_&
0^&
0]&
0\&
0[&
0Z&
0Y&
0X&
0W&
0V&
0U&
0T&
0S&
0R&
0Q&
0P&
0O&
0N&
0M&
b0 L&
b0 K&
b0 J&
0I&
b0 H&
0G&
0F&
0E&
0D&
0C&
0B&
0A&
0@&
0?&
0>&
0=&
0<&
0;&
0:&
09&
08&
07&
06&
05&
04&
03&
02&
01&
00&
0/&
0.&
0-&
0,&
0+&
0*&
0)&
0(&
0'&
0&&
0%&
0$&
0#&
0"&
0!&
0~%
0}%
0|%
0{%
0z%
0y%
0x%
0w%
0v%
0u%
0t%
0s%
0r%
0q%
0p%
0o%
0n%
0m%
b0 l%
b0 k%
b0 j%
0i%
b0 h%
0g%
0f%
0e%
0d%
0c%
0b%
0a%
0`%
0_%
0^%
0]%
0\%
0[%
0Z%
0Y%
0X%
0W%
0V%
0U%
0T%
0S%
0R%
0Q%
0P%
0O%
0N%
0M%
0L%
0K%
0J%
0I%
0H%
0G%
0F%
0E%
0D%
0C%
0B%
0A%
0@%
0?%
0>%
0=%
0<%
0;%
0:%
09%
08%
07%
06%
05%
04%
03%
02%
01%
00%
0/%
b0 .%
b0 -%
b0 ,%
0+%
b0 *%
0)%
0(%
0'%
0&%
0%%
0$%
0#%
0"%
0!%
0~$
0}$
0|$
0{$
0z$
0y$
0x$
0w$
0v$
0u$
0t$
0s$
0r$
0q$
0p$
0o$
0n$
0m$
0l$
0k$
0j$
0i$
0h$
0g$
0f$
0e$
0d$
0c$
0b$
0a$
0`$
0_$
0^$
0]$
0\$
0[$
0Z$
0Y$
0X$
0W$
0V$
0U$
0T$
0S$
0R$
0Q$
0P$
0O$
b0 N$
b0 M$
b0 L$
0K$
b0 J$
0I$
0H$
0G$
0F$
0E$
0D$
0C$
0B$
0A$
0@$
0?$
0>$
0=$
0<$
0;$
0:$
09$
08$
07$
06$
05$
04$
03$
02$
01$
00$
0/$
0.$
0-$
0,$
0+$
0*$
0)$
0($
0'$
0&$
0%$
0$$
0#$
0"$
0!$
0~#
0}#
0|#
0{#
0z#
0y#
0x#
0w#
0v#
0u#
0t#
0s#
0r#
0q#
0p#
0o#
b0 n#
b0 m#
b0 l#
0k#
b0 j#
0i#
0h#
0g#
0f#
0e#
0d#
0c#
0b#
0a#
0`#
0_#
0^#
0]#
0\#
0[#
0Z#
0Y#
0X#
0W#
0V#
0U#
0T#
0S#
0R#
0Q#
0P#
0O#
0N#
0M#
0L#
0K#
0J#
0I#
0H#
0G#
0F#
0E#
0D#
0C#
0B#
0A#
0@#
0?#
0>#
0=#
0<#
0;#
0:#
09#
08#
07#
06#
05#
04#
03#
02#
01#
b0 0#
b0 /#
b0 .#
0-#
b0 ,#
0+#
0*#
0)#
0(#
0'#
0&#
0%#
0$#
0##
0"#
0!#
0~"
0}"
0|"
0{"
0z"
0y"
0x"
0w"
0v"
0u"
0t"
0s"
0r"
0q"
0p"
0o"
0n"
0m"
0l"
0k"
0j"
0i"
0h"
0g"
0f"
0e"
0d"
0c"
0b"
0a"
0`"
0_"
0^"
0]"
0\"
0["
0Z"
0Y"
0X"
0W"
0V"
0U"
0T"
0S"
0R"
0Q"
b0 P"
b0 O"
b0 N"
0M"
b0 L"
1K"
0J"
b0 I"
b1 H"
b10000000 G"
b0 F"
b0 E"
b0 D"
b0 C"
b0 B"
b0 A"
b0 @"
b0 ?"
b0 >"
b0 ="
b0 <"
b0 ;"
b0 :"
b0 9"
b0 8"
b0 7"
b0 6"
b0 5"
b0 4"
b0 3"
b0 2"
b0 1"
b0 0"
b0 /"
b0 ."
b0 -"
b0 ,"
b0 +"
b0 *"
b111 )"
b0 ("
b0 '"
b0 &"
b0 %"
b0 $"
b0 #"
b0 ""
b0 !"
b111 ~
b111 }
b0 |
0{
b0 z
b0 y
b0 x
b0 w
b0 v
b0 u
b0 t
b0 s
b0 r
b0 q
b0 p
1o
b0 n
b0 m
0l
b0 k
b0 j
b0 i
b0 h
b0 g
b0 f
b0 e
0d
b0 c
0b
b0 a
0`
b0 _
b0 ^
0]
b0 \
b0 [
b0 Z
b0 Y
b111 X
b0 W
b0 V
b0 U
b0 T
b0 S
b0 R
b0 Q
b0 P
b0 O
b0 N
b0 M
b0 L
b0 K
b0 J
b0 I
b0 H
0G
b0 F
0E
b0 D
1C
0B
0A
0@
b0 ?
b0 >
b0 =
b0 <
b0 ;
b111 :
b0 9
08
17
06
05
b0 4
b0 3
02
11
b0 0
b0 /
b111 .
b0 -
b0 ,
b0 +
b0 *
b0 )
b0 (
b0 '
b0 &
b0 %
b0 $
b0 #
b0 "
b0 !
$end
#5
16
#10
06
07
#15
16
#20
1)'
1R"
1\"
12#
1<#
1p#
1z#
1P$
1Z$
10%
1:%
1n%
1x%
1N&
1X&
1.'
18'
b10000000 I"
06
b11 ?
b11 4
b11 =
b11 ."
b11 L"
b11 ,#
b11 j#
b11 J$
b11 *%
b11 h%
b11 H&
b11 ('
b111 >
b111 -"
b111 3
b111 <
15
#25
b11 c
b11 -
b11 ;
b11 W
b11 +"
1:'
b11 7"
b11 +'
10'
17'
1;'
b11 %
b11 M
b11 ("
b11 ?"
b11 ,'
1-'
11'
16
#30
1M"
0)'
0R"
0\"
1k"
1p"
1!#
1&#
1W"
02#
0<#
1K#
1P#
1_#
1d#
17#
0p#
0z#
1+$
10$
1?$
1D$
1u#
0P$
0Z$
1i$
1n$
1}$
1$%
1U$
00%
0:%
1I%
1N%
1]%
1b%
15%
0n%
0x%
1)&
1.&
1=&
1B&
1s%
0N&
0X&
1g&
1l&
1{&
1"'
1S&
0.'
08'
1G'
1L'
1['
1`'
13'
b1 I"
06
b11100110000 ?
b11100110000 4
b11100110000 =
b11100110000 ."
b11100110000 L"
b11100110000 ,#
b11100110000 j#
b11100110000 J$
b11100110000 *%
b11100110000 h%
b11100110000 H&
b11100110000 ('
b0 >
b0 -"
b0 3
b0 <
#35
b11100110000 ^
b11100110000 ,"
1l"
1q"
1"#
1'#
b11100110000 6"
b11100110000 N"
1X"
1j"
1n"
1o"
1s"
1~"
1$#
1%#
1)#
b11100110000 ,
b11100110000 T
b11100110000 !"
b11100110000 F"
b11100110000 P"
1V"
1Z"
16
#40
0M"
1-#
0p"
1z"
0&#
0P#
1Z#
0d#
00$
1:$
0D$
0n$
1x$
0$%
0N%
1X%
0b%
0.&
18&
0B&
0l&
1v&
0"'
0L'
1V'
0`'
b10 I"
06
b10110010000 ?
b10110010000 4
b10110010000 =
b10110010000 ."
b10110010000 L"
b10110010000 ,#
b10110010000 j#
b10110010000 J$
b10110010000 *%
b10110010000 h%
b10110010000 H&
b10110010000 ('
b1 >
b1 -"
b1 3
b1 <
#45
16#
1:#
1^#
1b#
1Y#
1]#
b10110010000 +
b10110010000 S
b10110010000 ""
b10110010000 E"
b10110010000 0#
1J#
1N#
16
#50
0-#
1k#
1f"
0k"
0z"
0!#
1F#
0K#
0Z#
0_#
1&$
0+$
0:$
0?$
1d$
0i$
0x$
0}$
1D%
0I%
0X%
0]%
1$&
0)&
08&
0=&
1b&
0g&
0v&
0{&
1B'
0G'
0V'
0['
b100 I"
06
b10000001000 ?
b10000001000 4
b10000001000 =
b10000001000 ."
b10000001000 L"
b10000001000 ,#
b10000001000 j#
b10000001000 J$
b10000001000 *%
b10000001000 h%
b10000001000 H&
b10000001000 ('
b10 >
b10 -"
b10 3
b10 <
#55
1%$
1)$
b10000001000 *
b10000001000 R
b10000001000 #"
b10000001000 D"
b10000001000 n#
1t#
1x#
16
#60
0k#
1K$
0f"
1k"
1z"
1!#
0W"
0F#
1K#
1Z#
1_#
07#
0&$
1+$
1:$
1?$
0u#
0d$
1i$
1x$
1}$
0U$
0D%
1I%
1X%
1]%
05%
0$&
1)&
18&
1=&
0s%
0b&
1g&
1v&
1{&
0S&
0B'
1G'
1V'
1['
03'
b1000 I"
06
b110010000 ?
b110010000 4
b110010000 =
b110010000 ."
b110010000 L"
b110010000 ,#
b110010000 j#
b110010000 J$
b110010000 *%
b110010000 h%
b110010000 H&
b110010000 ('
b11 >
b11 -"
b11 3
b11 <
#65
1|$
1"%
1w$
1{$
b110010000 )
b110010000 Q
b110010000 $"
b110010000 C"
b110010000 N$
1h$
1l$
16
#70
0K$
1+%
1\"
0k"
0z"
1&#
1<#
0K#
0Z#
1d#
1z#
0+$
0:$
1D$
1Z$
0i$
0x$
1$%
1:%
0I%
0X%
1b%
1x%
0)&
08&
1B&
1X&
0g&
0v&
1"'
18'
0G'
0V'
1`'
b10000 I"
06
b1100000010 ?
b1100000010 4
b1100000010 =
b1100000010 ."
b1100000010 L"
b1100000010 ,#
b1100000010 j#
b1100000010 J$
b1100000010 *%
b1100000010 h%
b1100000010 H&
b1100000010 ('
b100 >
b100 -"
b100 3
b100 <
#75
19%
1=%
1\%
1`%
b1100000010 (
b1100000010 P
b1100000010 %"
b1100000010 B"
b1100000010 .%
1a%
1e%
16
#80
0+%
1i%
0\"
1k"
1p"
1u"
1z"
0!#
0<#
1K#
1P#
1U#
1Z#
0_#
0z#
1+$
10$
15$
1:$
0?$
0Z$
1i$
1n$
1s$
1x$
0}$
0:%
1I%
1N%
1S%
1X%
0]%
0x%
1)&
1.&
13&
18&
0=&
0X&
1g&
1l&
1q&
1v&
0{&
08'
1G'
1L'
1Q'
1V'
0['
b100000 I"
06
b1011110000 ?
b1011110000 4
b1011110000 =
b1011110000 ."
b1011110000 L"
b1011110000 ,#
b1011110000 j#
b1011110000 J$
b1011110000 *%
b1011110000 h%
b1011110000 H&
b1011110000 ('
b101 >
b101 -"
b101 3
b101 <
#85
1A&
1E&
17&
1;&
12&
16&
1-&
11&
b1011110000 '
b1011110000 O
b1011110000 &"
b1011110000 A"
b1011110000 l%
1(&
1,&
16
#90
0i%
13(
15(
17(
b0 I"
06
b111 0
b111 9
b111 d'
b111 1(
12
05
#95
1x'
1z'
1'(
1)(
1@(
1B(
b11 ^
b11 ,"
1%(
b11001 j
b11001 q
0X"
0l"
0q"
0"#
b0 6"
b0 N"
0'#
1/'
b11 /"
b11 *'
19'
b10 t'
b11001 r
0K"
1''
1G
b11001 s
b11 v
b10000000 H"
0"(
0/(
0H(
b111 e
b111 h
b111 p
b111 u
b111 _
b111 *"
b11 F
b11 m'
b11 u'
b11 $(
b11 =(
b111 f
b111 s'
b10 [
b10 k
b10 z
1]
b11 a
b10 L
b10 k'
b1 U
b1 j'
b1 D
b1 l'
b1110 Z
b1110 y
b10000 c
b11100110000 -
b11100110000 ;
b11100110000 W
b11100110000 +"
1Y"
1m"
1r"
1##
b11100110000 >"
b11100110000 O"
1(#
00'
b0 7"
b0 +'
0:'
1J"
0&'
b1 G"
b1 \
b1 |
18(
16(
b111 "
b111 I
b111 h'
b111 o'
b111 2(
14(
1@
b0 .
b0 :
b0 X
b0 }
b0 ~
b0 )"
18
16
#100
08
06
#105
1|'
1+(
1D(
b111 r
1x'
1z'
0~'
0"(
1'(
1)(
0-(
0/(
1@(
1B(
0F(
0H(
1v'
0%(
0o
b111 F
b111 m'
b111 u'
b111 $(
b111 =(
b1 t'
b11 [
b11 k
b11 z
0]
b1 a
b0 U
b0 j'
b0 D
b0 l'
b1011 Z
b1011 y
b10110010000 -
b10110010000 ;
b10110010000 W
b10110010000 +"
0C
0E
0Y"
0m"
0r"
0##
b0 >"
b0 O"
0(#
19#
1M#
1\#
b10110010000 ="
b10110010000 /#
1a#
b111 V
b111 n
0J"
1*#
b111 j
b111 q
b0 i
b0 x
b10 G"
b10 \
b10 |
b0 g
b0 m
b0 t
b0 w
b0 r'
b1 .
b1 :
b1 X
b1 }
b1 ~
b1 )"
1((
b11 #
b11 J
b11 g'
b11 p'
b11 &(
1*(
18
16
#110
08
06
#115
0z'
0)(
0B(
1d
1l
1j$
1y$
b110010000 3"
b110010000 L$
1~$
b110010000 ^
b110010000 ,"
1I$
0X"
0l"
0q"
0"#
b0 6"
b0 N"
0'#
0/'
b0 /"
b0 *'
09'
0v'
0K"
0''
1o
b0 t'
b11101 s
b11101 r
b11 v
b1000 H"
b0 [
b0 k
b0 z
0G
b11 e
b11 h
b11 p
b11 u
b11 _
b11 *"
b0 a
b1000 Z
b1000 y
b11 f
b11 s'
b1000 c
b1 L
b1 k'
b10000001000 -
b10000001000 ;
b10000001000 W
b10000001000 +"
0x'
0~'
0'(
0-(
0@(
0F(
b100 F
b100 m'
b100 u'
b100 $(
b100 =(
b100 V
b100 n
09#
0M#
0\#
b0 ="
b0 /#
0a#
1w#
b10000001000 <"
b10000001000 m#
1($
b100 j
b100 q
b11001 i
b11001 x
0*#
1h#
b111 g
b111 m
b111 t
b111 w
b111 r'
b100 G"
b11 \
b11 |
1}'
1{'
b111 $
b111 K
b111 f'
b111 q'
b111 w'
1y'
0@
b10 .
b10 :
b10 X
b10 }
b10 ~
b10 )"
18
16
#120
08
06
#125
1~'
1-(
1F(
b11 ^
b11 ,"
0x'
1z'
0'(
1)(
0@(
1B(
1/'
b11 /"
b11 *'
19'
b1110 F
b1110 m'
b1110 u'
b1110 $(
b1110 =(
1''
0X"
0l"
0q"
0"#
b0 6"
b0 N"
0'#
0j$
0y$
b0 3"
b0 L$
0~$
b1110 V
b1110 n
0d
1`
b11001 i
b11001 x
0K"
0I$
b1110 j
b1110 q
0l
b11001 s
b11 v
b10000000 H"
b111 r
0v'
b111 e
b111 h
b111 p
b111 u
b111 _
b111 *"
0o
b0 t'
b111 f
b111 s'
b11 [
b11 k
b11 z
0G
b1 a
b10000 c
b10 L
b10 k'
b11 Z
b11 y
b110010000 -
b110010000 ;
b110010000 W
b110010000 +"
0w#
b0 <"
b0 m#
0($
1k$
1z$
b110010000 ;"
b110010000 M$
1!%
0h#
1H$
b1000 G"
b1 \
b1 |
b11 .
b11 :
b11 X
b11 }
b11 ~
b11 )"
1B
1{
18
16
#130
08
06
#135
1v'
b1 t'
1z'
1|'
1~'
1)(
1+(
1-(
1B(
1D(
1F(
1G
b1110 F
b1110 m'
b1110 u'
b1110 $(
b1110 =(
0d
b1110 V
b1110 n
b1110 j
b1110 q
0l
b111 r
0`
0o
b10 \
b10 |
b11 [
b11 k
b11 z
b1 a
b10000 c
b10 L
b10 k'
b1011 Z
b1011 y
b10110010000 -
b10110010000 ;
b10110010000 W
b10110010000 +"
19#
1M#
1\#
b10110010000 ="
b10110010000 /#
1a#
0k$
0z$
b0 ;"
b0 M$
0!%
1*#
0H$
b10 G"
0B
0{
b1 .
b1 :
b1 X
b1 }
b1 ~
b1 )"
18
16
#140
08
06
#145
0|'
0+(
0D(
1d
1l
1j$
1y$
b110010000 3"
b110010000 L$
1~$
b110010000 ^
b110010000 ,"
1I$
0X"
0l"
0q"
0"#
b0 6"
b0 N"
0'#
0/'
b0 /"
b0 *'
09'
0v'
0K"
0''
1o
b0 t'
b11101 s
b11101 r
b11 v
b1000 H"
b0 [
b0 k
b0 z
0G
b11 e
b11 h
b11 p
b11 u
b11 _
b11 *"
b0 a
b1000 Z
b1000 y
b11 f
b11 s'
b1000 c
b1 L
b1 k'
b10000001000 -
b10000001000 ;
b10000001000 W
b10000001000 +"
1x'
1z'
1~'
0"(
1'(
1)(
1-(
0/(
1@(
1B(
1F(
0H(
0E
b1011 F
b1011 m'
b1011 u'
b1011 $(
b1011 =(
09#
0M#
0\#
b0 ="
b0 /#
0a#
1w#
b10000001000 <"
b10000001000 m#
1($
b1011 V
b1011 n
0*#
1h#
b1011 j
b1011 q
b10011 i
b10011 x
b100 G"
b11 \
b11 |
b1110 g
b1110 m
b1110 t
b1110 w
b1110 r'
b10 .
b10 :
b10 X
b10 }
b10 ~
b10 )"
0y'
b1110 $
b1110 K
b1110 f'
b1110 q'
b1110 w'
1!(
18
16
#150
08
06
#155
0z'
0~'
1"(
0)(
0-(
1/(
0B(
0F(
1H(
1E
b11 ^
b11 ,"
1x'
1|'
1'(
1+(
1@(
1D(
1/'
b11 /"
b11 *'
19'
b10101 F
b10101 m'
b10101 u'
b10101 $(
b10101 =(
1''
0X"
0l"
0q"
0"#
b0 6"
b0 N"
0'#
0j$
0y$
b0 3"
b0 L$
0~$
b10101 V
b10101 n
0d
1`
b10011 i
b10011 x
0K"
0I$
b10101 j
b10101 q
0l
b11001 s
b11 v
b10000000 H"
b111 r
0v'
b111 e
b111 h
b111 p
b111 u
b111 _
b111 *"
0o
b0 t'
b111 f
b111 s'
b11 [
b11 k
b11 z
0G
b1 a
b10000 c
b10 L
b10 k'
b11 Z
b11 y
b110010000 -
b110010000 ;
b110010000 W
b110010000 +"
0w#
b0 <"
b0 m#
0($
1k$
1z$
b110010000 ;"
b110010000 M$
1!%
0h#
1H$
b1000 G"
b1 \
b1 |
1B
1{
b11 .
b11 :
b11 X
b11 }
b11 ~
b11 )"
18
16
#160
08
06
#165
1v'
1x'
1|'
1'(
1+(
1@(
1D(
b1 t'
0z'
1"(
0)(
1/(
0B(
1H(
1G
b11 ^
b11 ,"
1E
b10101 F
b10101 m'
b10101 u'
b10101 $(
b10101 =(
1/'
b11 /"
b11 *'
19'
0d
b10101 V
b10101 n
b10011 i
b10011 x
0G&
1''
b10101 j
b10101 q
0l
b11001 s
b11 v
b10000000 H"
b111 r
b111 e
b111 h
b111 p
b111 u
b111 _
b111 *"
0o
b111 f
b111 s'
b11 [
b11 k
b11 z
b1 a
b10000 c
b10 L
b10 k'
b1011 Z
b1011 y
b10110010000 -
b10110010000 ;
b10110010000 W
b10110010000 +"
b10 \
b10 |
19#
1M#
1\#
b10110010000 ="
b10110010000 /#
1a#
0k$
0z$
b0 ;"
b0 M$
0!%
0`
1*#
0H$
b10 G"
b1 .
b1 :
b1 X
b1 }
b1 ~
b1 )"
1A
0B
0{
18
16
#170
08
06
