$date
	Fri Sep 20 22:18:29 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module alu_tb $end
$var wire 4 ! R [3:0] $end
$var wire 1 " CF $end
$var reg 4 # A [3:0] $end
$var reg 4 $ B [3:0] $end
$var reg 2 % OP [1:0] $end
$scope module uut $end
$var wire 4 & A [3:0] $end
$var wire 4 ' B [3:0] $end
$var wire 2 ( OP [1:0] $end
$var wire 4 ) R_SHL [3:0] $end
$var wire 4 * R_NAND [3:0] $end
$var wire 4 + R_ADD_SUB [3:0] $end
$var wire 1 , CF_ADD_SUB $end
$var reg 1 " CF $end
$var reg 4 - R [3:0] $end
$var reg 1 . Sel $end
$scope module ADD_SUB1 $end
$var wire 4 / A [3:0] $end
$var wire 4 0 B [3:0] $end
$var wire 1 . Sel $end
$var wire 4 1 R [3:0] $end
$var wire 1 , CF $end
$var wire 4 2 B_selected [3:0] $end
$var wire 4 3 B_complement [3:0] $end
$upscope $end
$scope module NAND1 $end
$var wire 4 4 A [3:0] $end
$var wire 4 5 B [3:0] $end
$var wire 4 6 R [3:0] $end
$upscope $end
$scope module SHL1 $end
$var wire 4 7 A [3:0] $end
$var wire 4 8 B [3:0] $end
$var wire 2 9 B2bit [1:0] $end
$var reg 4 : R [3:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b0 :
b11 9
b11 8
b100 7
b1111 6
b11 5
b100 4
b1101 3
b11 2
b111 1
b11 0
b100 /
0.
b111 -
0,
b111 +
b1111 *
b0 )
b0 (
b11 '
b100 &
b0 %
b11 $
b100 #
0"
b111 !
$end
#10
1"
1,
b110 !
b110 -
1.
b1110 3
b1110 2
b10 9
b110 +
b110 1
b1 %
b1 (
b10 $
b10 '
b10 0
b10 5
b10 8
b1000 #
b1000 &
b1000 /
b1000 4
b1000 7
#20
b1011 2
b1010 *
b1010 6
0"
b1110 !
b1110 -
b1011 3
b1 9
b10 +
b10 1
b1110 )
b1110 :
b10 %
b10 (
b101 $
b101 '
b101 0
b101 5
b101 8
b111 #
b111 &
b111 /
b111 4
b111 7
#30
0,
b111 2
b1111 *
b1111 6
b1111 !
b1111 -
b111 3
b1101 +
b1101 1
b1100 )
b1100 :
b11 %
b11 (
b1001 $
b1001 '
b1001 0
b1001 5
b1001 8
b110 #
b110 &
b110 /
b110 4
b110 7
#40
b1111 2
b0 *
b0 6
1"
b1110 !
b1110 -
0.
b1 3
b11 9
b1110 +
b1110 1
1,
b1000 )
b1000 :
b0 %
b0 (
b1111 $
b1111 '
b1111 0
b1111 5
b1111 8
b1111 #
b1111 &
b1111 /
b1111 4
b1111 7
#50
1"
1,
b1001 )
b1001 :
b1111 *
b1111 6
b101 !
b101 -
1.
b1100 3
b1100 2
b0 9
b101 +
b101 1
b1 %
b1 (
b100 $
b100 '
b100 0
b100 5
b100 8
b1001 #
b1001 &
b1001 /
b1001 4
b1001 7
#60
