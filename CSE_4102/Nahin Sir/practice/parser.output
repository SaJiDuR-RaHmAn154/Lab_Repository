State 54 conflicts: 9 shift/reduce
State 71 conflicts: 2 shift/reduce
State 91 conflicts: 9 shift/reduce
State 97 conflicts: 9 shift/reduce


Grammar

    0 $accept: STATEMENTS $end

    1 STATEMENTS: STATEMENTS STATEMENT
    2           | /* empty */

    3 STATEMENT: DECLARATION
    4          | ASSIGNMENT
    5          | CONDITION
    6          | PRINT_STATEMENT
    7          | LOOP
    8          | FUNCTION

    9 EXP: EXP GT TERM
   10    | EXP LT TERM
   11    | EXP EQU TERM
   12    | EXP MOD TERM
   13    | EXP PLUS TERM
   14    | EXP MINUS TERM
   15    | TERM

   16 TERM: TERM MUL FACTOR
   17     | TERM DIV FACTOR
   18     | FACTOR

   19 FACTOR: LP EXP RP
   20       | ID
   21       | INT_NUM
   22       | FLOAT_NUM

   23 CONDITION: IF EXP COLON STATEMENTS ELIF_STATEMENT ELSE_STATEMENT

   24 ELIF_STATEMENT: ELIF_STATEMENT ELIF EXP COLON STATEMENTS
   25               | /* empty */

   26 ELSE_STATEMENT: ELSE COLON STATEMENTS
   27               | /* empty */

   28 ASSIGNMENT: ID ASSIGN VALUE

   29 VALUE: EXP
   30      | USE_INPUT

   31 DECLARATION: DIM ID AS TYPE
   32            | TYPE ID ASSIGN VALUE

   33 TYPE: INT
   34     | FLOAT
   35     | INTEGER

   36 USE_INPUT: INPUT LP STRING RP

   37 PRINT_STATEMENT: PRINT LP STRING RP

   38 LOOP: FOR ID ASSIGN INT_NUM TO INT_NUM STATEMENTS NEXT ID

   39 FUNCTION: FUNC ID LP ARGUMENT RP BEG RSTATEMENT END

   40 ARGUMENT: ARGS
   41         | /* empty */

   42 ARGS: ARGS COMMA ARG
   43     | ARG

   44 ARG: ID COLON TYPE

   45 RSTATEMENT: STATEMENTS RETURN_STATEMENT

   46 RETURN_STATEMENT: RETURN EXP SEMI
   47                 | ASSIGNMENT SEMI
   48                 | /* empty */


Terminals, with rules where they appear

$end (0) 0
error (256)
INT (258) 33
INTEGER (259) 35
FLOAT (260) 34
INPUT (261) 36
PRINT (262) 37
RETURN (263) 46
IF (264) 23
ELIF (265) 24
ELSE (266) 26
COLON (267) 23 24 26 44
COMMA (268) 42
SEMI (269) 46 47
MOD (270) 12
DIM (271) 31
AS (272) 31
FOR (273) 38
TO (274) 38
NEXT (275) 38
FUNC (276) 39
BEG (277) 39
END (278) 39
LP (279) 19 36 37 39
RP (280) 19 36 37 39
GT (281) 9
LT (282) 10
EQU (283) 11
ASSIGN (284) 28 32 38
PLUS (285) 13
MINUS (286) 14
MUL (287) 16
DIV (288) 17
ID (289) 20 28 31 32 38 39 44
STRING (290) 36 37
INT_NUM (291) 21 38
FLOAT_NUM (292) 22


Nonterminals, with rules where they appear

$accept (38)
    on left: 0
STATEMENTS (39)
    on left: 1 2, on right: 0 1 23 24 26 38 45
STATEMENT (40)
    on left: 3 4 5 6 7 8, on right: 1
EXP (41)
    on left: 9 10 11 12 13 14 15, on right: 9 10 11 12 13 14 19 23
    24 29 46
TERM (42)
    on left: 16 17 18, on right: 9 10 11 12 13 14 15 16 17
FACTOR (43)
    on left: 19 20 21 22, on right: 16 17 18
CONDITION (44)
    on left: 23, on right: 5
ELIF_STATEMENT (45)
    on left: 24 25, on right: 23 24
ELSE_STATEMENT (46)
    on left: 26 27, on right: 23
ASSIGNMENT (47)
    on left: 28, on right: 4 47
VALUE (48)
    on left: 29 30, on right: 28 32
DECLARATION (49)
    on left: 31 32, on right: 3
TYPE (50)
    on left: 33 34 35, on right: 31 32 44
USE_INPUT (51)
    on left: 36, on right: 30
PRINT_STATEMENT (52)
    on left: 37, on right: 6
LOOP (53)
    on left: 38, on right: 7
FUNCTION (54)
    on left: 39, on right: 8
ARGUMENT (55)
    on left: 40 41, on right: 39
ARGS (56)
    on left: 42 43, on right: 40 42
ARG (57)
    on left: 44, on right: 42 43
RSTATEMENT (58)
    on left: 45, on right: 39
RETURN_STATEMENT (59)
    on left: 46 47 48, on right: 45


state 0

    0 $accept: . STATEMENTS $end

    $default  reduce using rule 2 (STATEMENTS)

    STATEMENTS  go to state 1


state 1

    0 $accept: STATEMENTS . $end
    1 STATEMENTS: STATEMENTS . STATEMENT

    $end     shift, and go to state 2
    INT      shift, and go to state 3
    INTEGER  shift, and go to state 4
    FLOAT    shift, and go to state 5
    PRINT    shift, and go to state 6
    IF       shift, and go to state 7
    DIM      shift, and go to state 8
    FOR      shift, and go to state 9
    FUNC     shift, and go to state 10
    ID       shift, and go to state 11

    STATEMENT        go to state 12
    CONDITION        go to state 13
    ASSIGNMENT       go to state 14
    DECLARATION      go to state 15
    TYPE             go to state 16
    PRINT_STATEMENT  go to state 17
    LOOP             go to state 18
    FUNCTION         go to state 19


state 2

    0 $accept: STATEMENTS $end .

    $default  accept


state 3

   33 TYPE: INT .

    $default  reduce using rule 33 (TYPE)


state 4

   35 TYPE: INTEGER .

    $default  reduce using rule 35 (TYPE)


state 5

   34 TYPE: FLOAT .

    $default  reduce using rule 34 (TYPE)


state 6

   37 PRINT_STATEMENT: PRINT . LP STRING RP

    LP  shift, and go to state 20


state 7

   23 CONDITION: IF . EXP COLON STATEMENTS ELIF_STATEMENT ELSE_STATEMENT

    LP         shift, and go to state 21
    ID         shift, and go to state 22
    INT_NUM    shift, and go to state 23
    FLOAT_NUM  shift, and go to state 24

    EXP     go to state 25
    TERM    go to state 26
    FACTOR  go to state 27


state 8

   31 DECLARATION: DIM . ID AS TYPE

    ID  shift, and go to state 28


state 9

   38 LOOP: FOR . ID ASSIGN INT_NUM TO INT_NUM STATEMENTS NEXT ID

    ID  shift, and go to state 29


state 10

   39 FUNCTION: FUNC . ID LP ARGUMENT RP BEG RSTATEMENT END

    ID  shift, and go to state 30


state 11

   28 ASSIGNMENT: ID . ASSIGN VALUE

    ASSIGN  shift, and go to state 31


state 12

    1 STATEMENTS: STATEMENTS STATEMENT .

    $default  reduce using rule 1 (STATEMENTS)


state 13

    5 STATEMENT: CONDITION .

    $default  reduce using rule 5 (STATEMENT)


state 14

    4 STATEMENT: ASSIGNMENT .

    $default  reduce using rule 4 (STATEMENT)


state 15

    3 STATEMENT: DECLARATION .

    $default  reduce using rule 3 (STATEMENT)


state 16

   32 DECLARATION: TYPE . ID ASSIGN VALUE

    ID  shift, and go to state 32


state 17

    6 STATEMENT: PRINT_STATEMENT .

    $default  reduce using rule 6 (STATEMENT)


state 18

    7 STATEMENT: LOOP .

    $default  reduce using rule 7 (STATEMENT)


state 19

    8 STATEMENT: FUNCTION .

    $default  reduce using rule 8 (STATEMENT)


state 20

   37 PRINT_STATEMENT: PRINT LP . STRING RP

    STRING  shift, and go to state 33


state 21

   19 FACTOR: LP . EXP RP

    LP         shift, and go to state 21
    ID         shift, and go to state 22
    INT_NUM    shift, and go to state 23
    FLOAT_NUM  shift, and go to state 24

    EXP     go to state 34
    TERM    go to state 26
    FACTOR  go to state 27


state 22

   20 FACTOR: ID .

    $default  reduce using rule 20 (FACTOR)


state 23

   21 FACTOR: INT_NUM .

    $default  reduce using rule 21 (FACTOR)


state 24

   22 FACTOR: FLOAT_NUM .

    $default  reduce using rule 22 (FACTOR)


state 25

    9 EXP: EXP . GT TERM
   10    | EXP . LT TERM
   11    | EXP . EQU TERM
   12    | EXP . MOD TERM
   13    | EXP . PLUS TERM
   14    | EXP . MINUS TERM
   23 CONDITION: IF EXP . COLON STATEMENTS ELIF_STATEMENT ELSE_STATEMENT

    COLON  shift, and go to state 35
    MOD    shift, and go to state 36
    GT     shift, and go to state 37
    LT     shift, and go to state 38
    EQU    shift, and go to state 39
    PLUS   shift, and go to state 40
    MINUS  shift, and go to state 41


state 26

   15 EXP: TERM .
   16 TERM: TERM . MUL FACTOR
   17     | TERM . DIV FACTOR

    MUL  shift, and go to state 42
    DIV  shift, and go to state 43

    $default  reduce using rule 15 (EXP)


state 27

   18 TERM: FACTOR .

    $default  reduce using rule 18 (TERM)


state 28

   31 DECLARATION: DIM ID . AS TYPE

    AS  shift, and go to state 44


state 29

   38 LOOP: FOR ID . ASSIGN INT_NUM TO INT_NUM STATEMENTS NEXT ID

    ASSIGN  shift, and go to state 45


state 30

   39 FUNCTION: FUNC ID . LP ARGUMENT RP BEG RSTATEMENT END

    LP  shift, and go to state 46


state 31

   28 ASSIGNMENT: ID ASSIGN . VALUE

    INPUT      shift, and go to state 47
    LP         shift, and go to state 21
    ID         shift, and go to state 22
    INT_NUM    shift, and go to state 23
    FLOAT_NUM  shift, and go to state 24

    EXP        go to state 48
    TERM       go to state 26
    FACTOR     go to state 27
    VALUE      go to state 49
    USE_INPUT  go to state 50


state 32

   32 DECLARATION: TYPE ID . ASSIGN VALUE

    ASSIGN  shift, and go to state 51


state 33

   37 PRINT_STATEMENT: PRINT LP STRING . RP

    RP  shift, and go to state 52


state 34

    9 EXP: EXP . GT TERM
   10    | EXP . LT TERM
   11    | EXP . EQU TERM
   12    | EXP . MOD TERM
   13    | EXP . PLUS TERM
   14    | EXP . MINUS TERM
   19 FACTOR: LP EXP . RP

    MOD    shift, and go to state 36
    RP     shift, and go to state 53
    GT     shift, and go to state 37
    LT     shift, and go to state 38
    EQU    shift, and go to state 39
    PLUS   shift, and go to state 40
    MINUS  shift, and go to state 41


state 35

   23 CONDITION: IF EXP COLON . STATEMENTS ELIF_STATEMENT ELSE_STATEMENT

    $default  reduce using rule 2 (STATEMENTS)

    STATEMENTS  go to state 54


state 36

   12 EXP: EXP MOD . TERM

    LP         shift, and go to state 21
    ID         shift, and go to state 22
    INT_NUM    shift, and go to state 23
    FLOAT_NUM  shift, and go to state 24

    TERM    go to state 55
    FACTOR  go to state 27


state 37

    9 EXP: EXP GT . TERM

    LP         shift, and go to state 21
    ID         shift, and go to state 22
    INT_NUM    shift, and go to state 23
    FLOAT_NUM  shift, and go to state 24

    TERM    go to state 56
    FACTOR  go to state 27


state 38

   10 EXP: EXP LT . TERM

    LP         shift, and go to state 21
    ID         shift, and go to state 22
    INT_NUM    shift, and go to state 23
    FLOAT_NUM  shift, and go to state 24

    TERM    go to state 57
    FACTOR  go to state 27


state 39

   11 EXP: EXP EQU . TERM

    LP         shift, and go to state 21
    ID         shift, and go to state 22
    INT_NUM    shift, and go to state 23
    FLOAT_NUM  shift, and go to state 24

    TERM    go to state 58
    FACTOR  go to state 27


state 40

   13 EXP: EXP PLUS . TERM

    LP         shift, and go to state 21
    ID         shift, and go to state 22
    INT_NUM    shift, and go to state 23
    FLOAT_NUM  shift, and go to state 24

    TERM    go to state 59
    FACTOR  go to state 27


state 41

   14 EXP: EXP MINUS . TERM

    LP         shift, and go to state 21
    ID         shift, and go to state 22
    INT_NUM    shift, and go to state 23
    FLOAT_NUM  shift, and go to state 24

    TERM    go to state 60
    FACTOR  go to state 27


state 42

   16 TERM: TERM MUL . FACTOR

    LP         shift, and go to state 21
    ID         shift, and go to state 22
    INT_NUM    shift, and go to state 23
    FLOAT_NUM  shift, and go to state 24

    FACTOR  go to state 61


state 43

   17 TERM: TERM DIV . FACTOR

    LP         shift, and go to state 21
    ID         shift, and go to state 22
    INT_NUM    shift, and go to state 23
    FLOAT_NUM  shift, and go to state 24

    FACTOR  go to state 62


state 44

   31 DECLARATION: DIM ID AS . TYPE

    INT      shift, and go to state 3
    INTEGER  shift, and go to state 4
    FLOAT    shift, and go to state 5

    TYPE  go to state 63


state 45

   38 LOOP: FOR ID ASSIGN . INT_NUM TO INT_NUM STATEMENTS NEXT ID

    INT_NUM  shift, and go to state 64


state 46

   39 FUNCTION: FUNC ID LP . ARGUMENT RP BEG RSTATEMENT END

    ID  shift, and go to state 65

    $default  reduce using rule 41 (ARGUMENT)

    ARGUMENT  go to state 66
    ARGS      go to state 67
    ARG       go to state 68


state 47

   36 USE_INPUT: INPUT . LP STRING RP

    LP  shift, and go to state 69


state 48

    9 EXP: EXP . GT TERM
   10    | EXP . LT TERM
   11    | EXP . EQU TERM
   12    | EXP . MOD TERM
   13    | EXP . PLUS TERM
   14    | EXP . MINUS TERM
   29 VALUE: EXP .

    MOD    shift, and go to state 36
    GT     shift, and go to state 37
    LT     shift, and go to state 38
    EQU    shift, and go to state 39
    PLUS   shift, and go to state 40
    MINUS  shift, and go to state 41

    $default  reduce using rule 29 (VALUE)


state 49

   28 ASSIGNMENT: ID ASSIGN VALUE .

    $default  reduce using rule 28 (ASSIGNMENT)


state 50

   30 VALUE: USE_INPUT .

    $default  reduce using rule 30 (VALUE)


state 51

   32 DECLARATION: TYPE ID ASSIGN . VALUE

    INPUT      shift, and go to state 47
    LP         shift, and go to state 21
    ID         shift, and go to state 22
    INT_NUM    shift, and go to state 23
    FLOAT_NUM  shift, and go to state 24

    EXP        go to state 48
    TERM       go to state 26
    FACTOR     go to state 27
    VALUE      go to state 70
    USE_INPUT  go to state 50


state 52

   37 PRINT_STATEMENT: PRINT LP STRING RP .

    $default  reduce using rule 37 (PRINT_STATEMENT)


state 53

   19 FACTOR: LP EXP RP .

    $default  reduce using rule 19 (FACTOR)


state 54

    1 STATEMENTS: STATEMENTS . STATEMENT
   23 CONDITION: IF EXP COLON STATEMENTS . ELIF_STATEMENT ELSE_STATEMENT

    INT      shift, and go to state 3
    INTEGER  shift, and go to state 4
    FLOAT    shift, and go to state 5
    PRINT    shift, and go to state 6
    IF       shift, and go to state 7
    DIM      shift, and go to state 8
    FOR      shift, and go to state 9
    FUNC     shift, and go to state 10
    ID       shift, and go to state 11

    INT       [reduce using rule 25 (ELIF_STATEMENT)]
    INTEGER   [reduce using rule 25 (ELIF_STATEMENT)]
    FLOAT     [reduce using rule 25 (ELIF_STATEMENT)]
    PRINT     [reduce using rule 25 (ELIF_STATEMENT)]
    IF        [reduce using rule 25 (ELIF_STATEMENT)]
    DIM       [reduce using rule 25 (ELIF_STATEMENT)]
    FOR       [reduce using rule 25 (ELIF_STATEMENT)]
    FUNC      [reduce using rule 25 (ELIF_STATEMENT)]
    ID        [reduce using rule 25 (ELIF_STATEMENT)]
    $default  reduce using rule 25 (ELIF_STATEMENT)

    STATEMENT        go to state 12
    CONDITION        go to state 13
    ELIF_STATEMENT   go to state 71
    ASSIGNMENT       go to state 14
    DECLARATION      go to state 15
    TYPE             go to state 16
    PRINT_STATEMENT  go to state 17
    LOOP             go to state 18
    FUNCTION         go to state 19


state 55

   12 EXP: EXP MOD TERM .
   16 TERM: TERM . MUL FACTOR
   17     | TERM . DIV FACTOR

    MUL  shift, and go to state 42
    DIV  shift, and go to state 43

    $default  reduce using rule 12 (EXP)


state 56

    9 EXP: EXP GT TERM .
   16 TERM: TERM . MUL FACTOR
   17     | TERM . DIV FACTOR

    MUL  shift, and go to state 42
    DIV  shift, and go to state 43

    $default  reduce using rule 9 (EXP)


state 57

   10 EXP: EXP LT TERM .
   16 TERM: TERM . MUL FACTOR
   17     | TERM . DIV FACTOR

    MUL  shift, and go to state 42
    DIV  shift, and go to state 43

    $default  reduce using rule 10 (EXP)


state 58

   11 EXP: EXP EQU TERM .
   16 TERM: TERM . MUL FACTOR
   17     | TERM . DIV FACTOR

    MUL  shift, and go to state 42
    DIV  shift, and go to state 43

    $default  reduce using rule 11 (EXP)


state 59

   13 EXP: EXP PLUS TERM .
   16 TERM: TERM . MUL FACTOR
   17     | TERM . DIV FACTOR

    MUL  shift, and go to state 42
    DIV  shift, and go to state 43

    $default  reduce using rule 13 (EXP)


state 60

   14 EXP: EXP MINUS TERM .
   16 TERM: TERM . MUL FACTOR
   17     | TERM . DIV FACTOR

    MUL  shift, and go to state 42
    DIV  shift, and go to state 43

    $default  reduce using rule 14 (EXP)


state 61

   16 TERM: TERM MUL FACTOR .

    $default  reduce using rule 16 (TERM)


state 62

   17 TERM: TERM DIV FACTOR .

    $default  reduce using rule 17 (TERM)


state 63

   31 DECLARATION: DIM ID AS TYPE .

    $default  reduce using rule 31 (DECLARATION)


state 64

   38 LOOP: FOR ID ASSIGN INT_NUM . TO INT_NUM STATEMENTS NEXT ID

    TO  shift, and go to state 72


state 65

   44 ARG: ID . COLON TYPE

    COLON  shift, and go to state 73


state 66

   39 FUNCTION: FUNC ID LP ARGUMENT . RP BEG RSTATEMENT END

    RP  shift, and go to state 74


state 67

   40 ARGUMENT: ARGS .
   42 ARGS: ARGS . COMMA ARG

    COMMA  shift, and go to state 75

    $default  reduce using rule 40 (ARGUMENT)


state 68

   43 ARGS: ARG .

    $default  reduce using rule 43 (ARGS)


state 69

   36 USE_INPUT: INPUT LP . STRING RP

    STRING  shift, and go to state 76


state 70

   32 DECLARATION: TYPE ID ASSIGN VALUE .

    $default  reduce using rule 32 (DECLARATION)


state 71

   23 CONDITION: IF EXP COLON STATEMENTS ELIF_STATEMENT . ELSE_STATEMENT
   24 ELIF_STATEMENT: ELIF_STATEMENT . ELIF EXP COLON STATEMENTS

    ELIF  shift, and go to state 77
    ELSE  shift, and go to state 78

    ELIF      [reduce using rule 27 (ELSE_STATEMENT)]
    ELSE      [reduce using rule 27 (ELSE_STATEMENT)]
    $default  reduce using rule 27 (ELSE_STATEMENT)

    ELSE_STATEMENT  go to state 79


state 72

   38 LOOP: FOR ID ASSIGN INT_NUM TO . INT_NUM STATEMENTS NEXT ID

    INT_NUM  shift, and go to state 80


state 73

   44 ARG: ID COLON . TYPE

    INT      shift, and go to state 3
    INTEGER  shift, and go to state 4
    FLOAT    shift, and go to state 5

    TYPE  go to state 81


state 74

   39 FUNCTION: FUNC ID LP ARGUMENT RP . BEG RSTATEMENT END

    BEG  shift, and go to state 82


state 75

   42 ARGS: ARGS COMMA . ARG

    ID  shift, and go to state 65

    ARG  go to state 83


state 76

   36 USE_INPUT: INPUT LP STRING . RP

    RP  shift, and go to state 84


state 77

   24 ELIF_STATEMENT: ELIF_STATEMENT ELIF . EXP COLON STATEMENTS

    LP         shift, and go to state 21
    ID         shift, and go to state 22
    INT_NUM    shift, and go to state 23
    FLOAT_NUM  shift, and go to state 24

    EXP     go to state 85
    TERM    go to state 26
    FACTOR  go to state 27


state 78

   26 ELSE_STATEMENT: ELSE . COLON STATEMENTS

    COLON  shift, and go to state 86


state 79

   23 CONDITION: IF EXP COLON STATEMENTS ELIF_STATEMENT ELSE_STATEMENT .

    $default  reduce using rule 23 (CONDITION)


state 80

   38 LOOP: FOR ID ASSIGN INT_NUM TO INT_NUM . STATEMENTS NEXT ID

    $default  reduce using rule 2 (STATEMENTS)

    STATEMENTS  go to state 87


state 81

   44 ARG: ID COLON TYPE .

    $default  reduce using rule 44 (ARG)


state 82

   39 FUNCTION: FUNC ID LP ARGUMENT RP BEG . RSTATEMENT END

    $default  reduce using rule 2 (STATEMENTS)

    STATEMENTS  go to state 88
    RSTATEMENT  go to state 89


state 83

   42 ARGS: ARGS COMMA ARG .

    $default  reduce using rule 42 (ARGS)


state 84

   36 USE_INPUT: INPUT LP STRING RP .

    $default  reduce using rule 36 (USE_INPUT)


state 85

    9 EXP: EXP . GT TERM
   10    | EXP . LT TERM
   11    | EXP . EQU TERM
   12    | EXP . MOD TERM
   13    | EXP . PLUS TERM
   14    | EXP . MINUS TERM
   24 ELIF_STATEMENT: ELIF_STATEMENT ELIF EXP . COLON STATEMENTS

    COLON  shift, and go to state 90
    MOD    shift, and go to state 36
    GT     shift, and go to state 37
    LT     shift, and go to state 38
    EQU    shift, and go to state 39
    PLUS   shift, and go to state 40
    MINUS  shift, and go to state 41


state 86

   26 ELSE_STATEMENT: ELSE COLON . STATEMENTS

    $default  reduce using rule 2 (STATEMENTS)

    STATEMENTS  go to state 91


state 87

    1 STATEMENTS: STATEMENTS . STATEMENT
   38 LOOP: FOR ID ASSIGN INT_NUM TO INT_NUM STATEMENTS . NEXT ID

    INT      shift, and go to state 3
    INTEGER  shift, and go to state 4
    FLOAT    shift, and go to state 5
    PRINT    shift, and go to state 6
    IF       shift, and go to state 7
    DIM      shift, and go to state 8
    FOR      shift, and go to state 9
    NEXT     shift, and go to state 92
    FUNC     shift, and go to state 10
    ID       shift, and go to state 11

    STATEMENT        go to state 12
    CONDITION        go to state 13
    ASSIGNMENT       go to state 14
    DECLARATION      go to state 15
    TYPE             go to state 16
    PRINT_STATEMENT  go to state 17
    LOOP             go to state 18
    FUNCTION         go to state 19


state 88

    1 STATEMENTS: STATEMENTS . STATEMENT
   45 RSTATEMENT: STATEMENTS . RETURN_STATEMENT

    INT      shift, and go to state 3
    INTEGER  shift, and go to state 4
    FLOAT    shift, and go to state 5
    PRINT    shift, and go to state 6
    RETURN   shift, and go to state 93
    IF       shift, and go to state 7
    DIM      shift, and go to state 8
    FOR      shift, and go to state 9
    FUNC     shift, and go to state 10
    ID       shift, and go to state 11

    $default  reduce using rule 48 (RETURN_STATEMENT)

    STATEMENT         go to state 12
    CONDITION         go to state 13
    ASSIGNMENT        go to state 94
    DECLARATION       go to state 15
    TYPE              go to state 16
    PRINT_STATEMENT   go to state 17
    LOOP              go to state 18
    FUNCTION          go to state 19
    RETURN_STATEMENT  go to state 95


state 89

   39 FUNCTION: FUNC ID LP ARGUMENT RP BEG RSTATEMENT . END

    END  shift, and go to state 96


state 90

   24 ELIF_STATEMENT: ELIF_STATEMENT ELIF EXP COLON . STATEMENTS

    $default  reduce using rule 2 (STATEMENTS)

    STATEMENTS  go to state 97


state 91

    1 STATEMENTS: STATEMENTS . STATEMENT
   26 ELSE_STATEMENT: ELSE COLON STATEMENTS .

    INT      shift, and go to state 3
    INTEGER  shift, and go to state 4
    FLOAT    shift, and go to state 5
    PRINT    shift, and go to state 6
    IF       shift, and go to state 7
    DIM      shift, and go to state 8
    FOR      shift, and go to state 9
    FUNC     shift, and go to state 10
    ID       shift, and go to state 11

    INT       [reduce using rule 26 (ELSE_STATEMENT)]
    INTEGER   [reduce using rule 26 (ELSE_STATEMENT)]
    FLOAT     [reduce using rule 26 (ELSE_STATEMENT)]
    PRINT     [reduce using rule 26 (ELSE_STATEMENT)]
    IF        [reduce using rule 26 (ELSE_STATEMENT)]
    DIM       [reduce using rule 26 (ELSE_STATEMENT)]
    FOR       [reduce using rule 26 (ELSE_STATEMENT)]
    FUNC      [reduce using rule 26 (ELSE_STATEMENT)]
    ID        [reduce using rule 26 (ELSE_STATEMENT)]
    $default  reduce using rule 26 (ELSE_STATEMENT)

    STATEMENT        go to state 12
    CONDITION        go to state 13
    ASSIGNMENT       go to state 14
    DECLARATION      go to state 15
    TYPE             go to state 16
    PRINT_STATEMENT  go to state 17
    LOOP             go to state 18
    FUNCTION         go to state 19


state 92

   38 LOOP: FOR ID ASSIGN INT_NUM TO INT_NUM STATEMENTS NEXT . ID

    ID  shift, and go to state 98


state 93

   46 RETURN_STATEMENT: RETURN . EXP SEMI

    LP         shift, and go to state 21
    ID         shift, and go to state 22
    INT_NUM    shift, and go to state 23
    FLOAT_NUM  shift, and go to state 24

    EXP     go to state 99
    TERM    go to state 26
    FACTOR  go to state 27


state 94

    4 STATEMENT: ASSIGNMENT .
   47 RETURN_STATEMENT: ASSIGNMENT . SEMI

    SEMI  shift, and go to state 100

    $default  reduce using rule 4 (STATEMENT)


state 95

   45 RSTATEMENT: STATEMENTS RETURN_STATEMENT .

    $default  reduce using rule 45 (RSTATEMENT)


state 96

   39 FUNCTION: FUNC ID LP ARGUMENT RP BEG RSTATEMENT END .

    $default  reduce using rule 39 (FUNCTION)


state 97

    1 STATEMENTS: STATEMENTS . STATEMENT
   24 ELIF_STATEMENT: ELIF_STATEMENT ELIF EXP COLON STATEMENTS .

    INT      shift, and go to state 3
    INTEGER  shift, and go to state 4
    FLOAT    shift, and go to state 5
    PRINT    shift, and go to state 6
    IF       shift, and go to state 7
    DIM      shift, and go to state 8
    FOR      shift, and go to state 9
    FUNC     shift, and go to state 10
    ID       shift, and go to state 11

    INT       [reduce using rule 24 (ELIF_STATEMENT)]
    INTEGER   [reduce using rule 24 (ELIF_STATEMENT)]
    FLOAT     [reduce using rule 24 (ELIF_STATEMENT)]
    PRINT     [reduce using rule 24 (ELIF_STATEMENT)]
    IF        [reduce using rule 24 (ELIF_STATEMENT)]
    DIM       [reduce using rule 24 (ELIF_STATEMENT)]
    FOR       [reduce using rule 24 (ELIF_STATEMENT)]
    FUNC      [reduce using rule 24 (ELIF_STATEMENT)]
    ID        [reduce using rule 24 (ELIF_STATEMENT)]
    $default  reduce using rule 24 (ELIF_STATEMENT)

    STATEMENT        go to state 12
    CONDITION        go to state 13
    ASSIGNMENT       go to state 14
    DECLARATION      go to state 15
    TYPE             go to state 16
    PRINT_STATEMENT  go to state 17
    LOOP             go to state 18
    FUNCTION         go to state 19


state 98

   38 LOOP: FOR ID ASSIGN INT_NUM TO INT_NUM STATEMENTS NEXT ID .

    $default  reduce using rule 38 (LOOP)


state 99

    9 EXP: EXP . GT TERM
   10    | EXP . LT TERM
   11    | EXP . EQU TERM
   12    | EXP . MOD TERM
   13    | EXP . PLUS TERM
   14    | EXP . MINUS TERM
   46 RETURN_STATEMENT: RETURN EXP . SEMI

    SEMI   shift, and go to state 101
    MOD    shift, and go to state 36
    GT     shift, and go to state 37
    LT     shift, and go to state 38
    EQU    shift, and go to state 39
    PLUS   shift, and go to state 40
    MINUS  shift, and go to state 41


state 100

   47 RETURN_STATEMENT: ASSIGNMENT SEMI .

    $default  reduce using rule 47 (RETURN_STATEMENT)


state 101

   46 RETURN_STATEMENT: RETURN EXP SEMI .

    $default  reduce using rule 46 (RETURN_STATEMENT)
