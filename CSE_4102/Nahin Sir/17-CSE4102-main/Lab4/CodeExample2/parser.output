State 2 conflicts: 13 shift/reduce
State 17 conflicts: 4 shift/reduce
State 39 conflicts: 3 shift/reduce
State 93 conflicts: 10 shift/reduce
State 113 conflicts: 1 shift/reduce
State 134 conflicts: 10 shift/reduce
State 140 conflicts: 1 shift/reduce


Grammar

    0 $accept: code $end

    1 code: statements_optional functions

    2 statements_optional: statements_optional statement
    3                    | /* empty */

    4 declarations_optional: declarations_optional declaration
    5                      | /* empty */

    6 declaration: type names SEMI

    7 type: INT
    8     | CHAR
    9     | DOUBLE
   10     | VOID

   11 names: names COMMA ID
   12      | names COMMA init
   13      | ID
   14      | init

   15 init: ID ASSIGN constant

   16 statement: declarations_optional
   17          | if_statement
   18          | for_statement
   19          | while_statement
   20          | assigment SEMI
   21          | CONTINUE SEMI
   22          | BREAK SEMI
   23          | function_call SEMI
   24          | ID INCR SEMI
   25          | INCR ID SEMI
   26          | ID DECR SEMI
   27          | DECR ID SEMI
   28          | RETURN exp SEMI

   29 if_statement: IF LPAREN exp RPAREN tail else_if optional_else
   30             | IF LPAREN exp RPAREN tail optional_else

   31 else_if: else_if ELSE IF LPAREN exp RPAREN tail
   32        | ELSE IF LPAREN exp RPAREN tail

   33 optional_else: ELSE tail
   34              | /* empty */

   35 for_statement: FOR LPAREN assigment SEMI exp SEMI exp RPAREN tail

   36 while_statement: WHILE LPAREN exp RPAREN tail

   37 tail: LBRACE statements_optional RBRACE

   38 exp: exp ADDOP exp
   39    | exp SUBOP exp
   40    | exp MULOP exp
   41    | exp DIVOP exp
   42    | INCR ID
   43    | ID INCR
   44    | DECR ID
   45    | ID DECR
   46    | exp OROP exp
   47    | exp ANDOP exp
   48    | NOTOP exp
   49    | exp EQUOP exp
   50    | exp NEQUOP exp
   51    | exp GTEQ exp
   52    | exp GT exp
   53    | exp LTEQ exp
   54    | exp LT exp
   55    | LPAREN exp RPAREN
   56    | ID
   57    | sign constant
   58    | function_call

   59 sign: ADDOP
   60     | /* empty */

   61 constant: ICONST
   62         | FCONST
   63         | CCONST

   64 assigment: ID ASSIGN exp

   65 function_call: ID LPAREN call_params RPAREN

   66 call_params: call_params call_param
   67            | /* empty */

   68 call_param: call_param COMMA exp
   69           | call_param COMMA STRING
   70           | STRING
   71           | exp

   72 functions: functions function
   73          | function

   74 function: function_head function_tail

   75 function_head: return_type ID LPAREN parameters_optional RPAREN

   76 return_type: type

   77 parameters_optional: parameters
   78                    | /* empty */

   79 parameters: parameters COMMA parameter
   80           | parameter

   81 parameter: type ID

   82 function_tail: LBRACE statements_optional RBRACE


Terminals, with rules where they appear

$end (0) 0
error (256)
CHAR (258) 8
INT (259) 7
DOUBLE (260) 9
IF (261) 29 30 31 32
ELSE (262) 31 32 33
WHILE (263) 36
FOR (264) 35
CONTINUE (265) 21
BREAK (266) 22
VOID (267) 10
RETURN (268) 28
ADDOP (269) 38 59
SUBOP (270) 39
MULOP (271) 40
DIVOP (272) 41
INCR (273) 24 25 42 43
DECR (274) 26 27 44 45
OROP (275) 46
ANDOP (276) 47
NOTOP (277) 48
EQUOP (278) 49
NEQUOP (279) 50
GTEQ (280) 51
GT (281) 52
LTEQ (282) 53
LT (283) 54
LPAREN (284) 29 30 31 32 35 36 55 65 75
RPAREN (285) 29 30 31 32 35 36 55 65 75
LBRACE (286) 37 82
RBRACE (287) 37 82
SEMI (288) 6 20 21 22 23 24 25 26 27 28 35
ASSIGN (289) 15 64
COMMA (290) 11 12 68 69 79
ID (291) 11 13 15 24 25 26 27 42 43 44 45 56 64 65 75 81
ICONST (292) 61
FCONST (293) 62
CCONST (294) 63
STRING (295) 69 70


Nonterminals, with rules where they appear

$accept (41)
    on left: 0
code (42)
    on left: 1, on right: 0
statements_optional (43)
    on left: 2 3, on right: 1 2 37 82
declarations_optional (44)
    on left: 4 5, on right: 4 16
declaration (45)
    on left: 6, on right: 4
type (46)
    on left: 7 8 9 10, on right: 6 76 81
names (47)
    on left: 11 12 13 14, on right: 6 11 12
init (48)
    on left: 15, on right: 12 14
statement (49)
    on left: 16 17 18 19 20 21 22 23 24 25 26 27 28,
    on right: 2
if_statement (50)
    on left: 29 30, on right: 17
else_if (51)
    on left: 31 32, on right: 29 31
optional_else (52)
    on left: 33 34, on right: 29 30
for_statement (53)
    on left: 35, on right: 18
while_statement (54)
    on left: 36, on right: 19
tail (55)
    on left: 37, on right: 29 30 31 32 33 35 36
exp (56)
    on left: 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55
    56 57 58, on right: 28 29 30 31 32 35 36 38 39 40 41 46 47 48 49
    50 51 52 53 54 55 64 68 71
sign (57)
    on left: 59 60, on right: 57
constant (58)
    on left: 61 62 63, on right: 15 57
assigment (59)
    on left: 64, on right: 20 35
function_call (60)
    on left: 65, on right: 23 58
call_params (61)
    on left: 66 67, on right: 65 66
call_param (62)
    on left: 68 69 70 71, on right: 66 68 69
functions (63)
    on left: 72 73, on right: 1 72
function (64)
    on left: 74, on right: 72 73
function_head (65)
    on left: 75, on right: 74
return_type (66)
    on left: 76, on right: 75
parameters_optional (67)
    on left: 77 78, on right: 75
parameters (68)
    on left: 79 80, on right: 77 79
parameter (69)
    on left: 81, on right: 79 80
function_tail (70)
    on left: 82, on right: 74


state 0

    0 $accept: . code $end

    $default  reduce using rule 3 (statements_optional)

    code                 go to state 1
    statements_optional  go to state 2


state 1

    0 $accept: code . $end

    $end  shift, and go to state 3


state 2

    1 code: statements_optional . functions
    2 statements_optional: statements_optional . statement

    CHAR      shift, and go to state 4
    INT       shift, and go to state 5
    DOUBLE    shift, and go to state 6
    IF        shift, and go to state 7
    WHILE     shift, and go to state 8
    FOR       shift, and go to state 9
    CONTINUE  shift, and go to state 10
    BREAK     shift, and go to state 11
    VOID      shift, and go to state 12
    RETURN    shift, and go to state 13
    INCR      shift, and go to state 14
    DECR      shift, and go to state 15
    ID        shift, and go to state 16

    CHAR      [reduce using rule 5 (declarations_optional)]
    INT       [reduce using rule 5 (declarations_optional)]
    DOUBLE    [reduce using rule 5 (declarations_optional)]
    IF        [reduce using rule 5 (declarations_optional)]
    WHILE     [reduce using rule 5 (declarations_optional)]
    FOR       [reduce using rule 5 (declarations_optional)]
    CONTINUE  [reduce using rule 5 (declarations_optional)]
    BREAK     [reduce using rule 5 (declarations_optional)]
    VOID      [reduce using rule 5 (declarations_optional)]
    RETURN    [reduce using rule 5 (declarations_optional)]
    INCR      [reduce using rule 5 (declarations_optional)]
    DECR      [reduce using rule 5 (declarations_optional)]
    ID        [reduce using rule 5 (declarations_optional)]

    declarations_optional  go to state 17
    type                   go to state 18
    statement              go to state 19
    if_statement           go to state 20
    for_statement          go to state 21
    while_statement        go to state 22
    assigment              go to state 23
    function_call          go to state 24
    functions              go to state 25
    function               go to state 26
    function_head          go to state 27
    return_type            go to state 28


state 3

    0 $accept: code $end .

    $default  accept


state 4

    8 type: CHAR .

    $default  reduce using rule 8 (type)


state 5

    7 type: INT .

    $default  reduce using rule 7 (type)


state 6

    9 type: DOUBLE .

    $default  reduce using rule 9 (type)


state 7

   29 if_statement: IF . LPAREN exp RPAREN tail else_if optional_else
   30             | IF . LPAREN exp RPAREN tail optional_else

    LPAREN  shift, and go to state 29


state 8

   36 while_statement: WHILE . LPAREN exp RPAREN tail

    LPAREN  shift, and go to state 30


state 9

   35 for_statement: FOR . LPAREN assigment SEMI exp SEMI exp RPAREN tail

    LPAREN  shift, and go to state 31


state 10

   21 statement: CONTINUE . SEMI

    SEMI  shift, and go to state 32


state 11

   22 statement: BREAK . SEMI

    SEMI  shift, and go to state 33


state 12

   10 type: VOID .

    $default  reduce using rule 10 (type)


state 13

   28 statement: RETURN . exp SEMI

    ADDOP   shift, and go to state 34
    INCR    shift, and go to state 35
    DECR    shift, and go to state 36
    NOTOP   shift, and go to state 37
    LPAREN  shift, and go to state 38
    ID      shift, and go to state 39

    $default  reduce using rule 60 (sign)

    exp            go to state 40
    sign           go to state 41
    function_call  go to state 42


state 14

   25 statement: INCR . ID SEMI

    ID  shift, and go to state 43


state 15

   27 statement: DECR . ID SEMI

    ID  shift, and go to state 44


state 16

   24 statement: ID . INCR SEMI
   26          | ID . DECR SEMI
   64 assigment: ID . ASSIGN exp
   65 function_call: ID . LPAREN call_params RPAREN

    INCR    shift, and go to state 45
    DECR    shift, and go to state 46
    LPAREN  shift, and go to state 47
    ASSIGN  shift, and go to state 48


state 17

    4 declarations_optional: declarations_optional . declaration
   16 statement: declarations_optional .

    CHAR    shift, and go to state 4
    INT     shift, and go to state 5
    DOUBLE  shift, and go to state 6
    VOID    shift, and go to state 12

    CHAR      [reduce using rule 16 (statement)]
    INT       [reduce using rule 16 (statement)]
    DOUBLE    [reduce using rule 16 (statement)]
    VOID      [reduce using rule 16 (statement)]
    $default  reduce using rule 16 (statement)

    declaration  go to state 49
    type         go to state 50


state 18

   76 return_type: type .

    $default  reduce using rule 76 (return_type)


state 19

    2 statements_optional: statements_optional statement .

    $default  reduce using rule 2 (statements_optional)


state 20

   17 statement: if_statement .

    $default  reduce using rule 17 (statement)


state 21

   18 statement: for_statement .

    $default  reduce using rule 18 (statement)


state 22

   19 statement: while_statement .

    $default  reduce using rule 19 (statement)


state 23

   20 statement: assigment . SEMI

    SEMI  shift, and go to state 51


state 24

   23 statement: function_call . SEMI

    SEMI  shift, and go to state 52


state 25

    1 code: statements_optional functions .
   72 functions: functions . function

    CHAR    shift, and go to state 4
    INT     shift, and go to state 5
    DOUBLE  shift, and go to state 6
    VOID    shift, and go to state 12

    $default  reduce using rule 1 (code)

    type           go to state 18
    function       go to state 53
    function_head  go to state 27
    return_type    go to state 28


state 26

   73 functions: function .

    $default  reduce using rule 73 (functions)


state 27

   74 function: function_head . function_tail

    LBRACE  shift, and go to state 54

    function_tail  go to state 55


state 28

   75 function_head: return_type . ID LPAREN parameters_optional RPAREN

    ID  shift, and go to state 56


state 29

   29 if_statement: IF LPAREN . exp RPAREN tail else_if optional_else
   30             | IF LPAREN . exp RPAREN tail optional_else

    ADDOP   shift, and go to state 34
    INCR    shift, and go to state 35
    DECR    shift, and go to state 36
    NOTOP   shift, and go to state 37
    LPAREN  shift, and go to state 38
    ID      shift, and go to state 39

    $default  reduce using rule 60 (sign)

    exp            go to state 57
    sign           go to state 41
    function_call  go to state 42


state 30

   36 while_statement: WHILE LPAREN . exp RPAREN tail

    ADDOP   shift, and go to state 34
    INCR    shift, and go to state 35
    DECR    shift, and go to state 36
    NOTOP   shift, and go to state 37
    LPAREN  shift, and go to state 38
    ID      shift, and go to state 39

    $default  reduce using rule 60 (sign)

    exp            go to state 58
    sign           go to state 41
    function_call  go to state 42


state 31

   35 for_statement: FOR LPAREN . assigment SEMI exp SEMI exp RPAREN tail

    ID  shift, and go to state 59

    assigment  go to state 60


state 32

   21 statement: CONTINUE SEMI .

    $default  reduce using rule 21 (statement)


state 33

   22 statement: BREAK SEMI .

    $default  reduce using rule 22 (statement)


state 34

   59 sign: ADDOP .

    $default  reduce using rule 59 (sign)


state 35

   42 exp: INCR . ID

    ID  shift, and go to state 61


state 36

   44 exp: DECR . ID

    ID  shift, and go to state 62


state 37

   48 exp: NOTOP . exp

    ADDOP   shift, and go to state 34
    INCR    shift, and go to state 35
    DECR    shift, and go to state 36
    NOTOP   shift, and go to state 37
    LPAREN  shift, and go to state 38
    ID      shift, and go to state 39

    $default  reduce using rule 60 (sign)

    exp            go to state 63
    sign           go to state 41
    function_call  go to state 42


state 38

   55 exp: LPAREN . exp RPAREN

    ADDOP   shift, and go to state 34
    INCR    shift, and go to state 35
    DECR    shift, and go to state 36
    NOTOP   shift, and go to state 37
    LPAREN  shift, and go to state 38
    ID      shift, and go to state 39

    $default  reduce using rule 60 (sign)

    exp            go to state 64
    sign           go to state 41
    function_call  go to state 42


state 39

   43 exp: ID . INCR
   45    | ID . DECR
   56    | ID .
   65 function_call: ID . LPAREN call_params RPAREN

    INCR    shift, and go to state 65
    DECR    shift, and go to state 66
    LPAREN  shift, and go to state 47

    INCR      [reduce using rule 56 (exp)]
    DECR      [reduce using rule 56 (exp)]
    LPAREN    [reduce using rule 56 (exp)]
    $default  reduce using rule 56 (exp)


state 40

   28 statement: RETURN exp . SEMI
   38 exp: exp . ADDOP exp
   39    | exp . SUBOP exp
   40    | exp . MULOP exp
   41    | exp . DIVOP exp
   46    | exp . OROP exp
   47    | exp . ANDOP exp
   49    | exp . EQUOP exp
   50    | exp . NEQUOP exp
   51    | exp . GTEQ exp
   52    | exp . GT exp
   53    | exp . LTEQ exp
   54    | exp . LT exp

    ADDOP   shift, and go to state 67
    SUBOP   shift, and go to state 68
    MULOP   shift, and go to state 69
    DIVOP   shift, and go to state 70
    OROP    shift, and go to state 71
    ANDOP   shift, and go to state 72
    EQUOP   shift, and go to state 73
    NEQUOP  shift, and go to state 74
    GTEQ    shift, and go to state 75
    GT      shift, and go to state 76
    LTEQ    shift, and go to state 77
    LT      shift, and go to state 78
    SEMI    shift, and go to state 79


state 41

   57 exp: sign . constant

    ICONST  shift, and go to state 80
    FCONST  shift, and go to state 81
    CCONST  shift, and go to state 82

    constant  go to state 83


state 42

   58 exp: function_call .

    $default  reduce using rule 58 (exp)


state 43

   25 statement: INCR ID . SEMI

    SEMI  shift, and go to state 84


state 44

   27 statement: DECR ID . SEMI

    SEMI  shift, and go to state 85


state 45

   24 statement: ID INCR . SEMI

    SEMI  shift, and go to state 86


state 46

   26 statement: ID DECR . SEMI

    SEMI  shift, and go to state 87


state 47

   65 function_call: ID LPAREN . call_params RPAREN

    $default  reduce using rule 67 (call_params)

    call_params  go to state 88


state 48

   64 assigment: ID ASSIGN . exp

    ADDOP   shift, and go to state 34
    INCR    shift, and go to state 35
    DECR    shift, and go to state 36
    NOTOP   shift, and go to state 37
    LPAREN  shift, and go to state 38
    ID      shift, and go to state 39

    $default  reduce using rule 60 (sign)

    exp            go to state 89
    sign           go to state 41
    function_call  go to state 42


state 49

    4 declarations_optional: declarations_optional declaration .

    $default  reduce using rule 4 (declarations_optional)


state 50

    6 declaration: type . names SEMI

    ID  shift, and go to state 90

    names  go to state 91
    init   go to state 92


state 51

   20 statement: assigment SEMI .

    $default  reduce using rule 20 (statement)


state 52

   23 statement: function_call SEMI .

    $default  reduce using rule 23 (statement)


state 53

   72 functions: functions function .

    $default  reduce using rule 72 (functions)


state 54

   82 function_tail: LBRACE . statements_optional RBRACE

    $default  reduce using rule 3 (statements_optional)

    statements_optional  go to state 93


state 55

   74 function: function_head function_tail .

    $default  reduce using rule 74 (function)


state 56

   75 function_head: return_type ID . LPAREN parameters_optional RPAREN

    LPAREN  shift, and go to state 94


state 57

   29 if_statement: IF LPAREN exp . RPAREN tail else_if optional_else
   30             | IF LPAREN exp . RPAREN tail optional_else
   38 exp: exp . ADDOP exp
   39    | exp . SUBOP exp
   40    | exp . MULOP exp
   41    | exp . DIVOP exp
   46    | exp . OROP exp
   47    | exp . ANDOP exp
   49    | exp . EQUOP exp
   50    | exp . NEQUOP exp
   51    | exp . GTEQ exp
   52    | exp . GT exp
   53    | exp . LTEQ exp
   54    | exp . LT exp

    ADDOP   shift, and go to state 67
    SUBOP   shift, and go to state 68
    MULOP   shift, and go to state 69
    DIVOP   shift, and go to state 70
    OROP    shift, and go to state 71
    ANDOP   shift, and go to state 72
    EQUOP   shift, and go to state 73
    NEQUOP  shift, and go to state 74
    GTEQ    shift, and go to state 75
    GT      shift, and go to state 76
    LTEQ    shift, and go to state 77
    LT      shift, and go to state 78
    RPAREN  shift, and go to state 95


state 58

   36 while_statement: WHILE LPAREN exp . RPAREN tail
   38 exp: exp . ADDOP exp
   39    | exp . SUBOP exp
   40    | exp . MULOP exp
   41    | exp . DIVOP exp
   46    | exp . OROP exp
   47    | exp . ANDOP exp
   49    | exp . EQUOP exp
   50    | exp . NEQUOP exp
   51    | exp . GTEQ exp
   52    | exp . GT exp
   53    | exp . LTEQ exp
   54    | exp . LT exp

    ADDOP   shift, and go to state 67
    SUBOP   shift, and go to state 68
    MULOP   shift, and go to state 69
    DIVOP   shift, and go to state 70
    OROP    shift, and go to state 71
    ANDOP   shift, and go to state 72
    EQUOP   shift, and go to state 73
    NEQUOP  shift, and go to state 74
    GTEQ    shift, and go to state 75
    GT      shift, and go to state 76
    LTEQ    shift, and go to state 77
    LT      shift, and go to state 78
    RPAREN  shift, and go to state 96


state 59

   64 assigment: ID . ASSIGN exp

    ASSIGN  shift, and go to state 48


state 60

   35 for_statement: FOR LPAREN assigment . SEMI exp SEMI exp RPAREN tail

    SEMI  shift, and go to state 97


state 61

   42 exp: INCR ID .

    $default  reduce using rule 42 (exp)


state 62

   44 exp: DECR ID .

    $default  reduce using rule 44 (exp)


state 63

   38 exp: exp . ADDOP exp
   39    | exp . SUBOP exp
   40    | exp . MULOP exp
   41    | exp . DIVOP exp
   46    | exp . OROP exp
   47    | exp . ANDOP exp
   48    | NOTOP exp .
   49    | exp . EQUOP exp
   50    | exp . NEQUOP exp
   51    | exp . GTEQ exp
   52    | exp . GT exp
   53    | exp . LTEQ exp
   54    | exp . LT exp

    $default  reduce using rule 48 (exp)


state 64

   38 exp: exp . ADDOP exp
   39    | exp . SUBOP exp
   40    | exp . MULOP exp
   41    | exp . DIVOP exp
   46    | exp . OROP exp
   47    | exp . ANDOP exp
   49    | exp . EQUOP exp
   50    | exp . NEQUOP exp
   51    | exp . GTEQ exp
   52    | exp . GT exp
   53    | exp . LTEQ exp
   54    | exp . LT exp
   55    | LPAREN exp . RPAREN

    ADDOP   shift, and go to state 67
    SUBOP   shift, and go to state 68
    MULOP   shift, and go to state 69
    DIVOP   shift, and go to state 70
    OROP    shift, and go to state 71
    ANDOP   shift, and go to state 72
    EQUOP   shift, and go to state 73
    NEQUOP  shift, and go to state 74
    GTEQ    shift, and go to state 75
    GT      shift, and go to state 76
    LTEQ    shift, and go to state 77
    LT      shift, and go to state 78
    RPAREN  shift, and go to state 98


state 65

   43 exp: ID INCR .

    $default  reduce using rule 43 (exp)


state 66

   45 exp: ID DECR .

    $default  reduce using rule 45 (exp)


state 67

   38 exp: exp ADDOP . exp

    ADDOP   shift, and go to state 34
    INCR    shift, and go to state 35
    DECR    shift, and go to state 36
    NOTOP   shift, and go to state 37
    LPAREN  shift, and go to state 38
    ID      shift, and go to state 39

    $default  reduce using rule 60 (sign)

    exp            go to state 99
    sign           go to state 41
    function_call  go to state 42


state 68

   39 exp: exp SUBOP . exp

    ADDOP   shift, and go to state 34
    INCR    shift, and go to state 35
    DECR    shift, and go to state 36
    NOTOP   shift, and go to state 37
    LPAREN  shift, and go to state 38
    ID      shift, and go to state 39

    $default  reduce using rule 60 (sign)

    exp            go to state 100
    sign           go to state 41
    function_call  go to state 42


state 69

   40 exp: exp MULOP . exp

    ADDOP   shift, and go to state 34
    INCR    shift, and go to state 35
    DECR    shift, and go to state 36
    NOTOP   shift, and go to state 37
    LPAREN  shift, and go to state 38
    ID      shift, and go to state 39

    $default  reduce using rule 60 (sign)

    exp            go to state 101
    sign           go to state 41
    function_call  go to state 42


state 70

   41 exp: exp DIVOP . exp

    ADDOP   shift, and go to state 34
    INCR    shift, and go to state 35
    DECR    shift, and go to state 36
    NOTOP   shift, and go to state 37
    LPAREN  shift, and go to state 38
    ID      shift, and go to state 39

    $default  reduce using rule 60 (sign)

    exp            go to state 102
    sign           go to state 41
    function_call  go to state 42


state 71

   46 exp: exp OROP . exp

    ADDOP   shift, and go to state 34
    INCR    shift, and go to state 35
    DECR    shift, and go to state 36
    NOTOP   shift, and go to state 37
    LPAREN  shift, and go to state 38
    ID      shift, and go to state 39

    $default  reduce using rule 60 (sign)

    exp            go to state 103
    sign           go to state 41
    function_call  go to state 42


state 72

   47 exp: exp ANDOP . exp

    ADDOP   shift, and go to state 34
    INCR    shift, and go to state 35
    DECR    shift, and go to state 36
    NOTOP   shift, and go to state 37
    LPAREN  shift, and go to state 38
    ID      shift, and go to state 39

    $default  reduce using rule 60 (sign)

    exp            go to state 104
    sign           go to state 41
    function_call  go to state 42


state 73

   49 exp: exp EQUOP . exp

    ADDOP   shift, and go to state 34
    INCR    shift, and go to state 35
    DECR    shift, and go to state 36
    NOTOP   shift, and go to state 37
    LPAREN  shift, and go to state 38
    ID      shift, and go to state 39

    $default  reduce using rule 60 (sign)

    exp            go to state 105
    sign           go to state 41
    function_call  go to state 42


state 74

   50 exp: exp NEQUOP . exp

    ADDOP   shift, and go to state 34
    INCR    shift, and go to state 35
    DECR    shift, and go to state 36
    NOTOP   shift, and go to state 37
    LPAREN  shift, and go to state 38
    ID      shift, and go to state 39

    $default  reduce using rule 60 (sign)

    exp            go to state 106
    sign           go to state 41
    function_call  go to state 42


state 75

   51 exp: exp GTEQ . exp

    ADDOP   shift, and go to state 34
    INCR    shift, and go to state 35
    DECR    shift, and go to state 36
    NOTOP   shift, and go to state 37
    LPAREN  shift, and go to state 38
    ID      shift, and go to state 39

    $default  reduce using rule 60 (sign)

    exp            go to state 107
    sign           go to state 41
    function_call  go to state 42


state 76

   52 exp: exp GT . exp

    ADDOP   shift, and go to state 34
    INCR    shift, and go to state 35
    DECR    shift, and go to state 36
    NOTOP   shift, and go to state 37
    LPAREN  shift, and go to state 38
    ID      shift, and go to state 39

    $default  reduce using rule 60 (sign)

    exp            go to state 108
    sign           go to state 41
    function_call  go to state 42


state 77

   53 exp: exp LTEQ . exp

    ADDOP   shift, and go to state 34
    INCR    shift, and go to state 35
    DECR    shift, and go to state 36
    NOTOP   shift, and go to state 37
    LPAREN  shift, and go to state 38
    ID      shift, and go to state 39

    $default  reduce using rule 60 (sign)

    exp            go to state 109
    sign           go to state 41
    function_call  go to state 42


state 78

   54 exp: exp LT . exp

    ADDOP   shift, and go to state 34
    INCR    shift, and go to state 35
    DECR    shift, and go to state 36
    NOTOP   shift, and go to state 37
    LPAREN  shift, and go to state 38
    ID      shift, and go to state 39

    $default  reduce using rule 60 (sign)

    exp            go to state 110
    sign           go to state 41
    function_call  go to state 42


state 79

   28 statement: RETURN exp SEMI .

    $default  reduce using rule 28 (statement)


state 80

   61 constant: ICONST .

    $default  reduce using rule 61 (constant)


state 81

   62 constant: FCONST .

    $default  reduce using rule 62 (constant)


state 82

   63 constant: CCONST .

    $default  reduce using rule 63 (constant)


state 83

   57 exp: sign constant .

    $default  reduce using rule 57 (exp)


state 84

   25 statement: INCR ID SEMI .

    $default  reduce using rule 25 (statement)


state 85

   27 statement: DECR ID SEMI .

    $default  reduce using rule 27 (statement)


state 86

   24 statement: ID INCR SEMI .

    $default  reduce using rule 24 (statement)


state 87

   26 statement: ID DECR SEMI .

    $default  reduce using rule 26 (statement)


state 88

   65 function_call: ID LPAREN call_params . RPAREN
   66 call_params: call_params . call_param

    ADDOP   shift, and go to state 34
    INCR    shift, and go to state 35
    DECR    shift, and go to state 36
    NOTOP   shift, and go to state 37
    LPAREN  shift, and go to state 38
    RPAREN  shift, and go to state 111
    ID      shift, and go to state 39
    STRING  shift, and go to state 112

    $default  reduce using rule 60 (sign)

    exp            go to state 113
    sign           go to state 41
    function_call  go to state 42
    call_param     go to state 114


state 89

   38 exp: exp . ADDOP exp
   39    | exp . SUBOP exp
   40    | exp . MULOP exp
   41    | exp . DIVOP exp
   46    | exp . OROP exp
   47    | exp . ANDOP exp
   49    | exp . EQUOP exp
   50    | exp . NEQUOP exp
   51    | exp . GTEQ exp
   52    | exp . GT exp
   53    | exp . LTEQ exp
   54    | exp . LT exp
   64 assigment: ID ASSIGN exp .

    ADDOP   shift, and go to state 67
    SUBOP   shift, and go to state 68
    MULOP   shift, and go to state 69
    DIVOP   shift, and go to state 70
    OROP    shift, and go to state 71
    ANDOP   shift, and go to state 72
    EQUOP   shift, and go to state 73
    NEQUOP  shift, and go to state 74
    GTEQ    shift, and go to state 75
    GT      shift, and go to state 76
    LTEQ    shift, and go to state 77
    LT      shift, and go to state 78

    $default  reduce using rule 64 (assigment)


state 90

   13 names: ID .
   15 init: ID . ASSIGN constant

    ASSIGN  shift, and go to state 115

    $default  reduce using rule 13 (names)


state 91

    6 declaration: type names . SEMI
   11 names: names . COMMA ID
   12      | names . COMMA init

    SEMI   shift, and go to state 116
    COMMA  shift, and go to state 117


state 92

   14 names: init .

    $default  reduce using rule 14 (names)


state 93

    2 statements_optional: statements_optional . statement
   82 function_tail: LBRACE statements_optional . RBRACE

    IF        shift, and go to state 7
    WHILE     shift, and go to state 8
    FOR       shift, and go to state 9
    CONTINUE  shift, and go to state 10
    BREAK     shift, and go to state 11
    RETURN    shift, and go to state 13
    INCR      shift, and go to state 14
    DECR      shift, and go to state 15
    RBRACE    shift, and go to state 118
    ID        shift, and go to state 16

    IF        [reduce using rule 5 (declarations_optional)]
    WHILE     [reduce using rule 5 (declarations_optional)]
    FOR       [reduce using rule 5 (declarations_optional)]
    CONTINUE  [reduce using rule 5 (declarations_optional)]
    BREAK     [reduce using rule 5 (declarations_optional)]
    RETURN    [reduce using rule 5 (declarations_optional)]
    INCR      [reduce using rule 5 (declarations_optional)]
    DECR      [reduce using rule 5 (declarations_optional)]
    RBRACE    [reduce using rule 5 (declarations_optional)]
    ID        [reduce using rule 5 (declarations_optional)]
    $default  reduce using rule 5 (declarations_optional)

    declarations_optional  go to state 17
    statement              go to state 19
    if_statement           go to state 20
    for_statement          go to state 21
    while_statement        go to state 22
    assigment              go to state 23
    function_call          go to state 24


state 94

   75 function_head: return_type ID LPAREN . parameters_optional RPAREN

    CHAR    shift, and go to state 4
    INT     shift, and go to state 5
    DOUBLE  shift, and go to state 6
    VOID    shift, and go to state 12

    $default  reduce using rule 78 (parameters_optional)

    type                 go to state 119
    parameters_optional  go to state 120
    parameters           go to state 121
    parameter            go to state 122


state 95

   29 if_statement: IF LPAREN exp RPAREN . tail else_if optional_else
   30             | IF LPAREN exp RPAREN . tail optional_else

    LBRACE  shift, and go to state 123

    tail  go to state 124


state 96

   36 while_statement: WHILE LPAREN exp RPAREN . tail

    LBRACE  shift, and go to state 123

    tail  go to state 125


state 97

   35 for_statement: FOR LPAREN assigment SEMI . exp SEMI exp RPAREN tail

    ADDOP   shift, and go to state 34
    INCR    shift, and go to state 35
    DECR    shift, and go to state 36
    NOTOP   shift, and go to state 37
    LPAREN  shift, and go to state 38
    ID      shift, and go to state 39

    $default  reduce using rule 60 (sign)

    exp            go to state 126
    sign           go to state 41
    function_call  go to state 42


state 98

   55 exp: LPAREN exp RPAREN .

    $default  reduce using rule 55 (exp)


state 99

   38 exp: exp . ADDOP exp
   38    | exp ADDOP exp .
   39    | exp . SUBOP exp
   40    | exp . MULOP exp
   41    | exp . DIVOP exp
   46    | exp . OROP exp
   47    | exp . ANDOP exp
   49    | exp . EQUOP exp
   50    | exp . NEQUOP exp
   51    | exp . GTEQ exp
   52    | exp . GT exp
   53    | exp . LTEQ exp
   54    | exp . LT exp

    MULOP  shift, and go to state 69
    DIVOP  shift, and go to state 70

    $default  reduce using rule 38 (exp)


state 100

   38 exp: exp . ADDOP exp
   39    | exp . SUBOP exp
   39    | exp SUBOP exp .
   40    | exp . MULOP exp
   41    | exp . DIVOP exp
   46    | exp . OROP exp
   47    | exp . ANDOP exp
   49    | exp . EQUOP exp
   50    | exp . NEQUOP exp
   51    | exp . GTEQ exp
   52    | exp . GT exp
   53    | exp . LTEQ exp
   54    | exp . LT exp

    MULOP  shift, and go to state 69
    DIVOP  shift, and go to state 70

    $default  reduce using rule 39 (exp)


state 101

   38 exp: exp . ADDOP exp
   39    | exp . SUBOP exp
   40    | exp . MULOP exp
   40    | exp MULOP exp .
   41    | exp . DIVOP exp
   46    | exp . OROP exp
   47    | exp . ANDOP exp
   49    | exp . EQUOP exp
   50    | exp . NEQUOP exp
   51    | exp . GTEQ exp
   52    | exp . GT exp
   53    | exp . LTEQ exp
   54    | exp . LT exp

    $default  reduce using rule 40 (exp)


state 102

   38 exp: exp . ADDOP exp
   39    | exp . SUBOP exp
   40    | exp . MULOP exp
   41    | exp . DIVOP exp
   41    | exp DIVOP exp .
   46    | exp . OROP exp
   47    | exp . ANDOP exp
   49    | exp . EQUOP exp
   50    | exp . NEQUOP exp
   51    | exp . GTEQ exp
   52    | exp . GT exp
   53    | exp . LTEQ exp
   54    | exp . LT exp

    $default  reduce using rule 41 (exp)


state 103

   38 exp: exp . ADDOP exp
   39    | exp . SUBOP exp
   40    | exp . MULOP exp
   41    | exp . DIVOP exp
   46    | exp . OROP exp
   46    | exp OROP exp .
   47    | exp . ANDOP exp
   49    | exp . EQUOP exp
   50    | exp . NEQUOP exp
   51    | exp . GTEQ exp
   52    | exp . GT exp
   53    | exp . LTEQ exp
   54    | exp . LT exp

    ADDOP   shift, and go to state 67
    SUBOP   shift, and go to state 68
    MULOP   shift, and go to state 69
    DIVOP   shift, and go to state 70
    ANDOP   shift, and go to state 72
    EQUOP   shift, and go to state 73
    NEQUOP  shift, and go to state 74
    GTEQ    shift, and go to state 75
    GT      shift, and go to state 76
    LTEQ    shift, and go to state 77
    LT      shift, and go to state 78

    $default  reduce using rule 46 (exp)


state 104

   38 exp: exp . ADDOP exp
   39    | exp . SUBOP exp
   40    | exp . MULOP exp
   41    | exp . DIVOP exp
   46    | exp . OROP exp
   47    | exp . ANDOP exp
   47    | exp ANDOP exp .
   49    | exp . EQUOP exp
   50    | exp . NEQUOP exp
   51    | exp . GTEQ exp
   52    | exp . GT exp
   53    | exp . LTEQ exp
   54    | exp . LT exp

    ADDOP   shift, and go to state 67
    SUBOP   shift, and go to state 68
    MULOP   shift, and go to state 69
    DIVOP   shift, and go to state 70
    EQUOP   shift, and go to state 73
    NEQUOP  shift, and go to state 74
    GTEQ    shift, and go to state 75
    GT      shift, and go to state 76
    LTEQ    shift, and go to state 77
    LT      shift, and go to state 78

    $default  reduce using rule 47 (exp)


state 105

   38 exp: exp . ADDOP exp
   39    | exp . SUBOP exp
   40    | exp . MULOP exp
   41    | exp . DIVOP exp
   46    | exp . OROP exp
   47    | exp . ANDOP exp
   49    | exp . EQUOP exp
   49    | exp EQUOP exp .
   50    | exp . NEQUOP exp
   51    | exp . GTEQ exp
   52    | exp . GT exp
   53    | exp . LTEQ exp
   54    | exp . LT exp

    ADDOP  shift, and go to state 67
    SUBOP  shift, and go to state 68
    MULOP  shift, and go to state 69
    DIVOP  shift, and go to state 70
    GTEQ   shift, and go to state 75
    GT     shift, and go to state 76
    LTEQ   shift, and go to state 77
    LT     shift, and go to state 78

    $default  reduce using rule 49 (exp)


state 106

   38 exp: exp . ADDOP exp
   39    | exp . SUBOP exp
   40    | exp . MULOP exp
   41    | exp . DIVOP exp
   46    | exp . OROP exp
   47    | exp . ANDOP exp
   49    | exp . EQUOP exp
   50    | exp . NEQUOP exp
   50    | exp NEQUOP exp .
   51    | exp . GTEQ exp
   52    | exp . GT exp
   53    | exp . LTEQ exp
   54    | exp . LT exp

    ADDOP  shift, and go to state 67
    SUBOP  shift, and go to state 68
    MULOP  shift, and go to state 69
    DIVOP  shift, and go to state 70
    GTEQ   shift, and go to state 75
    GT     shift, and go to state 76
    LTEQ   shift, and go to state 77
    LT     shift, and go to state 78

    $default  reduce using rule 50 (exp)


state 107

   38 exp: exp . ADDOP exp
   39    | exp . SUBOP exp
   40    | exp . MULOP exp
   41    | exp . DIVOP exp
   46    | exp . OROP exp
   47    | exp . ANDOP exp
   49    | exp . EQUOP exp
   50    | exp . NEQUOP exp
   51    | exp . GTEQ exp
   51    | exp GTEQ exp .
   52    | exp . GT exp
   53    | exp . LTEQ exp
   54    | exp . LT exp

    ADDOP  shift, and go to state 67
    SUBOP  shift, and go to state 68
    MULOP  shift, and go to state 69
    DIVOP  shift, and go to state 70

    $default  reduce using rule 51 (exp)


state 108

   38 exp: exp . ADDOP exp
   39    | exp . SUBOP exp
   40    | exp . MULOP exp
   41    | exp . DIVOP exp
   46    | exp . OROP exp
   47    | exp . ANDOP exp
   49    | exp . EQUOP exp
   50    | exp . NEQUOP exp
   51    | exp . GTEQ exp
   52    | exp . GT exp
   52    | exp GT exp .
   53    | exp . LTEQ exp
   54    | exp . LT exp

    ADDOP  shift, and go to state 67
    SUBOP  shift, and go to state 68
    MULOP  shift, and go to state 69
    DIVOP  shift, and go to state 70

    $default  reduce using rule 52 (exp)


state 109

   38 exp: exp . ADDOP exp
   39    | exp . SUBOP exp
   40    | exp . MULOP exp
   41    | exp . DIVOP exp
   46    | exp . OROP exp
   47    | exp . ANDOP exp
   49    | exp . EQUOP exp
   50    | exp . NEQUOP exp
   51    | exp . GTEQ exp
   52    | exp . GT exp
   53    | exp . LTEQ exp
   53    | exp LTEQ exp .
   54    | exp . LT exp

    ADDOP  shift, and go to state 67
    SUBOP  shift, and go to state 68
    MULOP  shift, and go to state 69
    DIVOP  shift, and go to state 70

    $default  reduce using rule 53 (exp)


state 110

   38 exp: exp . ADDOP exp
   39    | exp . SUBOP exp
   40    | exp . MULOP exp
   41    | exp . DIVOP exp
   46    | exp . OROP exp
   47    | exp . ANDOP exp
   49    | exp . EQUOP exp
   50    | exp . NEQUOP exp
   51    | exp . GTEQ exp
   52    | exp . GT exp
   53    | exp . LTEQ exp
   54    | exp . LT exp
   54    | exp LT exp .

    ADDOP  shift, and go to state 67
    SUBOP  shift, and go to state 68
    MULOP  shift, and go to state 69
    DIVOP  shift, and go to state 70

    $default  reduce using rule 54 (exp)


state 111

   65 function_call: ID LPAREN call_params RPAREN .

    $default  reduce using rule 65 (function_call)


state 112

   70 call_param: STRING .

    $default  reduce using rule 70 (call_param)


state 113

   38 exp: exp . ADDOP exp
   39    | exp . SUBOP exp
   40    | exp . MULOP exp
   41    | exp . DIVOP exp
   46    | exp . OROP exp
   47    | exp . ANDOP exp
   49    | exp . EQUOP exp
   50    | exp . NEQUOP exp
   51    | exp . GTEQ exp
   52    | exp . GT exp
   53    | exp . LTEQ exp
   54    | exp . LT exp
   71 call_param: exp .

    ADDOP   shift, and go to state 67
    SUBOP   shift, and go to state 68
    MULOP   shift, and go to state 69
    DIVOP   shift, and go to state 70
    OROP    shift, and go to state 71
    ANDOP   shift, and go to state 72
    EQUOP   shift, and go to state 73
    NEQUOP  shift, and go to state 74
    GTEQ    shift, and go to state 75
    GT      shift, and go to state 76
    LTEQ    shift, and go to state 77
    LT      shift, and go to state 78

    ADDOP     [reduce using rule 71 (call_param)]
    $default  reduce using rule 71 (call_param)


state 114

   66 call_params: call_params call_param .
   68 call_param: call_param . COMMA exp
   69           | call_param . COMMA STRING

    COMMA  shift, and go to state 127

    $default  reduce using rule 66 (call_params)


state 115

   15 init: ID ASSIGN . constant

    ICONST  shift, and go to state 80
    FCONST  shift, and go to state 81
    CCONST  shift, and go to state 82

    constant  go to state 128


state 116

    6 declaration: type names SEMI .

    $default  reduce using rule 6 (declaration)


state 117

   11 names: names COMMA . ID
   12      | names COMMA . init

    ID  shift, and go to state 129

    init  go to state 130


state 118

   82 function_tail: LBRACE statements_optional RBRACE .

    $default  reduce using rule 82 (function_tail)


state 119

   81 parameter: type . ID

    ID  shift, and go to state 131


state 120

   75 function_head: return_type ID LPAREN parameters_optional . RPAREN

    RPAREN  shift, and go to state 132


state 121

   77 parameters_optional: parameters .
   79 parameters: parameters . COMMA parameter

    COMMA  shift, and go to state 133

    $default  reduce using rule 77 (parameters_optional)


state 122

   80 parameters: parameter .

    $default  reduce using rule 80 (parameters)


state 123

   37 tail: LBRACE . statements_optional RBRACE

    $default  reduce using rule 3 (statements_optional)

    statements_optional  go to state 134


state 124

   29 if_statement: IF LPAREN exp RPAREN tail . else_if optional_else
   30             | IF LPAREN exp RPAREN tail . optional_else

    ELSE  shift, and go to state 135

    $default  reduce using rule 34 (optional_else)

    else_if        go to state 136
    optional_else  go to state 137


state 125

   36 while_statement: WHILE LPAREN exp RPAREN tail .

    $default  reduce using rule 36 (while_statement)


state 126

   35 for_statement: FOR LPAREN assigment SEMI exp . SEMI exp RPAREN tail
   38 exp: exp . ADDOP exp
   39    | exp . SUBOP exp
   40    | exp . MULOP exp
   41    | exp . DIVOP exp
   46    | exp . OROP exp
   47    | exp . ANDOP exp
   49    | exp . EQUOP exp
   50    | exp . NEQUOP exp
   51    | exp . GTEQ exp
   52    | exp . GT exp
   53    | exp . LTEQ exp
   54    | exp . LT exp

    ADDOP   shift, and go to state 67
    SUBOP   shift, and go to state 68
    MULOP   shift, and go to state 69
    DIVOP   shift, and go to state 70
    OROP    shift, and go to state 71
    ANDOP   shift, and go to state 72
    EQUOP   shift, and go to state 73
    NEQUOP  shift, and go to state 74
    GTEQ    shift, and go to state 75
    GT      shift, and go to state 76
    LTEQ    shift, and go to state 77
    LT      shift, and go to state 78
    SEMI    shift, and go to state 138


state 127

   68 call_param: call_param COMMA . exp
   69           | call_param COMMA . STRING

    ADDOP   shift, and go to state 34
    INCR    shift, and go to state 35
    DECR    shift, and go to state 36
    NOTOP   shift, and go to state 37
    LPAREN  shift, and go to state 38
    ID      shift, and go to state 39
    STRING  shift, and go to state 139

    $default  reduce using rule 60 (sign)

    exp            go to state 140
    sign           go to state 41
    function_call  go to state 42


state 128

   15 init: ID ASSIGN constant .

    $default  reduce using rule 15 (init)


state 129

   11 names: names COMMA ID .
   15 init: ID . ASSIGN constant

    ASSIGN  shift, and go to state 115

    $default  reduce using rule 11 (names)


state 130

   12 names: names COMMA init .

    $default  reduce using rule 12 (names)


state 131

   81 parameter: type ID .

    $default  reduce using rule 81 (parameter)


state 132

   75 function_head: return_type ID LPAREN parameters_optional RPAREN .

    $default  reduce using rule 75 (function_head)


state 133

   79 parameters: parameters COMMA . parameter

    CHAR    shift, and go to state 4
    INT     shift, and go to state 5
    DOUBLE  shift, and go to state 6
    VOID    shift, and go to state 12

    type       go to state 119
    parameter  go to state 141


state 134

    2 statements_optional: statements_optional . statement
   37 tail: LBRACE statements_optional . RBRACE

    IF        shift, and go to state 7
    WHILE     shift, and go to state 8
    FOR       shift, and go to state 9
    CONTINUE  shift, and go to state 10
    BREAK     shift, and go to state 11
    RETURN    shift, and go to state 13
    INCR      shift, and go to state 14
    DECR      shift, and go to state 15
    RBRACE    shift, and go to state 142
    ID        shift, and go to state 16

    IF        [reduce using rule 5 (declarations_optional)]
    WHILE     [reduce using rule 5 (declarations_optional)]
    FOR       [reduce using rule 5 (declarations_optional)]
    CONTINUE  [reduce using rule 5 (declarations_optional)]
    BREAK     [reduce using rule 5 (declarations_optional)]
    RETURN    [reduce using rule 5 (declarations_optional)]
    INCR      [reduce using rule 5 (declarations_optional)]
    DECR      [reduce using rule 5 (declarations_optional)]
    RBRACE    [reduce using rule 5 (declarations_optional)]
    ID        [reduce using rule 5 (declarations_optional)]
    $default  reduce using rule 5 (declarations_optional)

    declarations_optional  go to state 17
    statement              go to state 19
    if_statement           go to state 20
    for_statement          go to state 21
    while_statement        go to state 22
    assigment              go to state 23
    function_call          go to state 24


state 135

   32 else_if: ELSE . IF LPAREN exp RPAREN tail
   33 optional_else: ELSE . tail

    IF      shift, and go to state 143
    LBRACE  shift, and go to state 123

    tail  go to state 144


state 136

   29 if_statement: IF LPAREN exp RPAREN tail else_if . optional_else
   31 else_if: else_if . ELSE IF LPAREN exp RPAREN tail

    ELSE  shift, and go to state 145

    $default  reduce using rule 34 (optional_else)

    optional_else  go to state 146


state 137

   30 if_statement: IF LPAREN exp RPAREN tail optional_else .

    $default  reduce using rule 30 (if_statement)


state 138

   35 for_statement: FOR LPAREN assigment SEMI exp SEMI . exp RPAREN tail

    ADDOP   shift, and go to state 34
    INCR    shift, and go to state 35
    DECR    shift, and go to state 36
    NOTOP   shift, and go to state 37
    LPAREN  shift, and go to state 38
    ID      shift, and go to state 39

    $default  reduce using rule 60 (sign)

    exp            go to state 147
    sign           go to state 41
    function_call  go to state 42


state 139

   69 call_param: call_param COMMA STRING .

    $default  reduce using rule 69 (call_param)


state 140

   38 exp: exp . ADDOP exp
   39    | exp . SUBOP exp
   40    | exp . MULOP exp
   41    | exp . DIVOP exp
   46    | exp . OROP exp
   47    | exp . ANDOP exp
   49    | exp . EQUOP exp
   50    | exp . NEQUOP exp
   51    | exp . GTEQ exp
   52    | exp . GT exp
   53    | exp . LTEQ exp
   54    | exp . LT exp
   68 call_param: call_param COMMA exp .

    ADDOP   shift, and go to state 67
    SUBOP   shift, and go to state 68
    MULOP   shift, and go to state 69
    DIVOP   shift, and go to state 70
    OROP    shift, and go to state 71
    ANDOP   shift, and go to state 72
    EQUOP   shift, and go to state 73
    NEQUOP  shift, and go to state 74
    GTEQ    shift, and go to state 75
    GT      shift, and go to state 76
    LTEQ    shift, and go to state 77
    LT      shift, and go to state 78

    ADDOP     [reduce using rule 68 (call_param)]
    $default  reduce using rule 68 (call_param)


state 141

   79 parameters: parameters COMMA parameter .

    $default  reduce using rule 79 (parameters)


state 142

   37 tail: LBRACE statements_optional RBRACE .

    $default  reduce using rule 37 (tail)


state 143

   32 else_if: ELSE IF . LPAREN exp RPAREN tail

    LPAREN  shift, and go to state 148


state 144

   33 optional_else: ELSE tail .

    $default  reduce using rule 33 (optional_else)


state 145

   31 else_if: else_if ELSE . IF LPAREN exp RPAREN tail
   33 optional_else: ELSE . tail

    IF      shift, and go to state 149
    LBRACE  shift, and go to state 123

    tail  go to state 144


state 146

   29 if_statement: IF LPAREN exp RPAREN tail else_if optional_else .

    $default  reduce using rule 29 (if_statement)


state 147

   35 for_statement: FOR LPAREN assigment SEMI exp SEMI exp . RPAREN tail
   38 exp: exp . ADDOP exp
   39    | exp . SUBOP exp
   40    | exp . MULOP exp
   41    | exp . DIVOP exp
   46    | exp . OROP exp
   47    | exp . ANDOP exp
   49    | exp . EQUOP exp
   50    | exp . NEQUOP exp
   51    | exp . GTEQ exp
   52    | exp . GT exp
   53    | exp . LTEQ exp
   54    | exp . LT exp

    ADDOP   shift, and go to state 67
    SUBOP   shift, and go to state 68
    MULOP   shift, and go to state 69
    DIVOP   shift, and go to state 70
    OROP    shift, and go to state 71
    ANDOP   shift, and go to state 72
    EQUOP   shift, and go to state 73
    NEQUOP  shift, and go to state 74
    GTEQ    shift, and go to state 75
    GT      shift, and go to state 76
    LTEQ    shift, and go to state 77
    LT      shift, and go to state 78
    RPAREN  shift, and go to state 150


state 148

   32 else_if: ELSE IF LPAREN . exp RPAREN tail

    ADDOP   shift, and go to state 34
    INCR    shift, and go to state 35
    DECR    shift, and go to state 36
    NOTOP   shift, and go to state 37
    LPAREN  shift, and go to state 38
    ID      shift, and go to state 39

    $default  reduce using rule 60 (sign)

    exp            go to state 151
    sign           go to state 41
    function_call  go to state 42


state 149

   31 else_if: else_if ELSE IF . LPAREN exp RPAREN tail

    LPAREN  shift, and go to state 152


state 150

   35 for_statement: FOR LPAREN assigment SEMI exp SEMI exp RPAREN . tail

    LBRACE  shift, and go to state 123

    tail  go to state 153


state 151

   32 else_if: ELSE IF LPAREN exp . RPAREN tail
   38 exp: exp . ADDOP exp
   39    | exp . SUBOP exp
   40    | exp . MULOP exp
   41    | exp . DIVOP exp
   46    | exp . OROP exp
   47    | exp . ANDOP exp
   49    | exp . EQUOP exp
   50    | exp . NEQUOP exp
   51    | exp . GTEQ exp
   52    | exp . GT exp
   53    | exp . LTEQ exp
   54    | exp . LT exp

    ADDOP   shift, and go to state 67
    SUBOP   shift, and go to state 68
    MULOP   shift, and go to state 69
    DIVOP   shift, and go to state 70
    OROP    shift, and go to state 71
    ANDOP   shift, and go to state 72
    EQUOP   shift, and go to state 73
    NEQUOP  shift, and go to state 74
    GTEQ    shift, and go to state 75
    GT      shift, and go to state 76
    LTEQ    shift, and go to state 77
    LT      shift, and go to state 78
    RPAREN  shift, and go to state 154


state 152

   31 else_if: else_if ELSE IF LPAREN . exp RPAREN tail

    ADDOP   shift, and go to state 34
    INCR    shift, and go to state 35
    DECR    shift, and go to state 36
    NOTOP   shift, and go to state 37
    LPAREN  shift, and go to state 38
    ID      shift, and go to state 39

    $default  reduce using rule 60 (sign)

    exp            go to state 155
    sign           go to state 41
    function_call  go to state 42


state 153

   35 for_statement: FOR LPAREN assigment SEMI exp SEMI exp RPAREN tail .

    $default  reduce using rule 35 (for_statement)


state 154

   32 else_if: ELSE IF LPAREN exp RPAREN . tail

    LBRACE  shift, and go to state 123

    tail  go to state 156


state 155

   31 else_if: else_if ELSE IF LPAREN exp . RPAREN tail
   38 exp: exp . ADDOP exp
   39    | exp . SUBOP exp
   40    | exp . MULOP exp
   41    | exp . DIVOP exp
   46    | exp . OROP exp
   47    | exp . ANDOP exp
   49    | exp . EQUOP exp
   50    | exp . NEQUOP exp
   51    | exp . GTEQ exp
   52    | exp . GT exp
   53    | exp . LTEQ exp
   54    | exp . LT exp

    ADDOP   shift, and go to state 67
    SUBOP   shift, and go to state 68
    MULOP   shift, and go to state 69
    DIVOP   shift, and go to state 70
    OROP    shift, and go to state 71
    ANDOP   shift, and go to state 72
    EQUOP   shift, and go to state 73
    NEQUOP  shift, and go to state 74
    GTEQ    shift, and go to state 75
    GT      shift, and go to state 76
    LTEQ    shift, and go to state 77
    LT      shift, and go to state 78
    RPAREN  shift, and go to state 157


state 156

   32 else_if: ELSE IF LPAREN exp RPAREN tail .

    $default  reduce using rule 32 (else_if)


state 157

   31 else_if: else_if ELSE IF LPAREN exp RPAREN . tail

    LBRACE  shift, and go to state 123

    tail  go to state 158


state 158

   31 else_if: else_if ELSE IF LPAREN exp RPAREN tail .

    $default  reduce using rule 31 (else_if)
